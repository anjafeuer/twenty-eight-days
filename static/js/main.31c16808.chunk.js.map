{"version":3,"sources":["db/default.ts","cycle/actionTypes.ts","db/actionTypes.ts","cycle/reducer.ts","db/model.ts","db/reducer.ts","store/useTypedSelector.ts","store/useTypedDispatch.ts","cycle/components/CycleDescription.tsx","cycle/components/CycleDurationHistogram.tsx","cycle/components/CycleStats.tsx","cycle/containers/CycleStats.tsx","store/default.ts","store/reducer.ts","store/store.ts","cycle/components/CycleAdd.tsx","cycle/components/CycleData.tsx","cycle/containers/CycleData.tsx","cycle/mocks.ts","db/containers/DataProvider.tsx","db/components/LoginForm.tsx","db/containers/LoginForm.tsx","cycle/components/ExportCycleData.tsx","cycle/containers/ExportCycleData.tsx","store/index.ts","app/components/Progress.tsx","app/components/PrivacyFirst.tsx","app/components/Error.tsx","app/components/Main.tsx","app/containers/Main.tsx","app/components/App.tsx","app/containers/App.tsx","serviceWorker.ts","index.tsx","db/actions.ts","cycle/index.ts","db/index.ts","cycle/utils.ts","theme/actions.ts","theme/model.ts","theme/defaults.ts","theme/components/ThemeSwitch.tsx","theme/containers/ThemeSwitch.tsx","theme/reducer.ts","cycle/actions.ts","cycle/default.ts"],"names":["defaultDatabaseState","authState","type","UPDATE_CYCLES","UPDATE_AUTH_STATE","cycleReducer","state","defaultCycleState","action","cycles","length","startDates","sort","a","b","compareDesc","startDate","history","cycleHistory","rawCycles","latestRawCycle","currentCycle","id","duration","differenceInDays","startOfToday","pastCycles","flatMap","rawCycle","index","from","to","Math","abs","CycleIdBrand","dbReducer","useTypedSelector","useSelector","useTypedDispatch","useDispatch","CycleDescription","currentDay","median","lastStartDate","Typography","variant","align","dateWithWeekDay","Date","valueOf","dateWithoutWeekDay","addDays","useStyles","makeStyles","theme","bar","fill","palette","primary","main","opacity","strokeWidth","stroke","background","default","barBackdrop","dot","secondary","line","text","textAnchor","fontSizeAdjust","dominantBaseline","CycleDurationHistogram","width","height","cycleDurations","classes","binMin","min","binMax","max","x","scaleLinear","domain","range","bins","histogram","thresholds","ticks","y","d","nice","binWidth","currentDayBin","undefined","medianX","viewBox","className","x1","x2","y1","marginTop","y2","marginBottom","map","i","h","key","x0","cx","cy","r","root","display","alignItems","justifyItems","gridGap","spacing","CycleStats","useState","today","setToday","useInterval","s","cycle","durations","c","values","mid","floor","nums","medianCycleLength","daysPast","day","defaultRootState","database","defaultThemeState","rootReducer","themeReducer","configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","content","gridTemplateColumns","actions","CycleAdd","onAdd","selectedDate","handleDateChange","isValid","setValid","Card","CardContent","dateAdapter","DateFnsAdapter","locale","deLocale","label","value","onChange","date","onError","e","renderInput","props","TextField","mask","disableFuture","showTodayButton","autoOk","CardActions","Button","color","disabled","onClick","list","CycleData","onDelete","List","ListItem","ListItemText","f","ListItemSecondaryAction","IconButton","edge","aria-label","loginState","dispatch","addStartDate","deleteStartDate","mockCycleStartDates","parse","DATE_FORMAT_IMPORT_EXPORT","DataProvider","children","existingStartDates","useEffect","appId","process","REACT_APP_USERBASE_APP_ID","URLSearchParams","window","location","search","get","dbInitInProgress","userbase","init","then","session","user","loginSuccessful","showLoginForm","catch","error","dbInitFailed","isDatabaseOpen","setDatabaseOpen","databaseName","cycleDatabaseName","console","log","openDatabase","changeHandler","items","itemId","item","updateCycles","err","username","startsWith","forEach","msSinceEpoch","find","insertItem","_","gridTemplateRows","gridRowGap","button","minHeight","LoginForm","onSubmit","REACT_APP_USERBASE_USERNAME","setUsername","REACT_APP_USERBASE_PASSWORD","password","setPassword","isSubmitted","noValidate","autoComplete","preventDefault","fullWidth","event","target","trim","CircularProgress","size","loginFormSubmitted","signIn","rememberMe","loginFormError","ExportCycleData","cycleState","data","exportableData","exportCycleData","Progress","PrivacyFirst","fontSize","Error","bottomNav","position","bottom","left","Main","navTab","setNavTab","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","appBar","toolbar","toolbarLeft","marginRight","toolbarCenter","pointerEvents","breakpoints","down","visibility","title","justifySelf","contrastText","toolbarRight","marginLeft","paddingTop","paddingLeft","paddingRight","App","AppBar","Toolbar","reload","ThemeProvider","CssBaseline","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker","updateAuthState","updateLoginForm","deleteItem","format","options","enLocale","toggleTheme","lightTheme","createMuiTheme","darkTheme","margin","ThemeSwitch","onToggleTheme","Switch","checked","blob","Blob","JSON","stringify","FileSaver","saveAs"],"mappings":"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","file":"static/js/main.31c16808.chunk.js","sourcesContent":["import { DatabaseState } from './model'\n\nexport const defaultDatabaseState: DatabaseState = {\n  authState: {\n    type: 'no-app-id',\n  },\n}\n","export const UPDATE_CYCLES = 'cycle/UPDATE_CYCLES'\n","export const UPDATE_AUTH_STATE = 'db/UPDATE_AUTH_STATE'\n","import { CycleHistory, CycleState, PastCycle, RawCycle } from './model'\nimport { defaultCycleState } from './default'\nimport { CycleAction } from './actions'\nimport { UPDATE_CYCLES } from './actionTypes'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport startOfToday from 'date-fns/startOfToday'\nimport { compareDesc } from 'date-fns'\n\nexport const cycleReducer = (state: CycleState = defaultCycleState, action: CycleAction): CycleState => {\n  switch (action.type) {\n    case UPDATE_CYCLES: {\n      if (action.cycles.length > 0) {\n        const startDates = [...action.cycles].sort((a, b) => compareDesc(a.startDate, b.startDate))\n        const history = cycleHistory(startDates)\n        return {\n          ...state,\n          history,\n        }\n      } else {\n        return state\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport function cycleHistory(rawCycles: ReadonlyArray<RawCycle>): CycleHistory {\n  const latestRawCycle = rawCycles[0]\n  return {\n    currentCycle: {\n      id: latestRawCycle.id,\n      startDate: latestRawCycle.startDate,\n      duration: differenceInDays(startOfToday(), latestRawCycle.startDate),\n      type: 'current',\n    },\n    pastCycles: rawCycles.flatMap<PastCycle>((rawCycle, index, rawCycles) => {\n      if (index > 0) {\n        const from = rawCycles[index - 1].startDate\n        const to = rawCycle.startDate\n        const duration = Math.abs(differenceInDays(from, to))\n        return [\n          {\n            ...rawCycle,\n            type: 'past',\n            duration,\n          },\n        ]\n      } else {\n        return []\n      }\n    }),\n  }\n}\n","import { UserResult } from 'userbase-js'\n\n/* ·················································································································· */\n/*  Redux State\n/* ·················································································································· */\n\nexport interface DatabaseState {\n  readonly authState: AuthState\n}\n\nexport type AuthState = NoAppId | DbInitInProgress | DbInitFailed | DisplayLoginForm | LoginState\n\nexport interface NoAppId {\n  type: 'no-app-id'\n}\n\nexport interface DbInitInProgress {\n  type: 'db-init-in-progress'\n}\n\nexport interface DbInitFailed {\n  type: 'db-init-failed'\n  error: any\n}\n\nexport interface DisplayLoginForm {\n  type: 'login-form'\n  state: LoginFormState\n}\n\nexport type LoginFormState = LoginFormIdle | LoginFormSubmitted | LoginFormError\n\nexport interface LoginFormIdle {\n  type: 'login-form-idle'\n}\n\nexport interface LoginFormSubmitted {\n  type: 'login-form-submitted'\n}\n\nexport interface LoginFormError {\n  type: 'login-form-error'\n  error: any\n}\n\nexport interface LoginState {\n  type: 'logged-in'\n  user: UserResult\n}\n\n/* ·················································································································· */\n/*  Userbase IDs\n/* ·················································································································· */\n\nenum CycleIdBrand {}\n\nexport type CycleId = CycleIdBrand & string\n","import { DatabaseState } from './model'\nimport { defaultDatabaseState } from './default'\nimport { DatabaseAction } from './actions'\nimport { UPDATE_AUTH_STATE } from './actionTypes'\n\nexport const dbReducer = (state: DatabaseState = defaultDatabaseState, action: DatabaseAction): DatabaseState => {\n  switch (action.type) {\n    case UPDATE_AUTH_STATE:\n      return {\n        ...state,\n        authState: action.authState,\n      }\n    default:\n      return state\n  }\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport { RootState } from './model'\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useDispatch } from 'react-redux'\nimport { RootAction } from './actions'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { RootState } from './model'\n\nexport const useTypedDispatch = <A extends RootAction>() => useDispatch<ThunkDispatch<RootState, {}, A>>()\n","import * as React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { dateWithoutWeekDay, dateWithWeekDay } from '../utils'\nimport addDays from 'date-fns/addDays'\n\ninterface Props {\n  readonly currentDay: number\n  readonly median: number\n  readonly lastStartDate: number\n}\n\nexport const CycleDescription = ({ currentDay, median, lastStartDate }: Props) => (\n  <div>\n    <Typography variant={'body1'} align={'center'}>\n      Hey – today is {dateWithWeekDay(new Date().valueOf())}\n    </Typography>\n    <Typography variant={'h1'} align={'center'}>\n      {currentDay}\n    </Typography>\n    <Typography variant={'body1'} align={'center'}>\n      days since your last period, which started on {dateWithoutWeekDay(lastStartDate)}.\n    </Typography>\n    <br />\n    <Typography variant={'body1'} align={'center'}>\n      Your next period is expected on <b>{dateWithWeekDay(addDays(lastStartDate, median).valueOf())}</b>.\n    </Typography>\n    <br />\n    <Typography variant={'body1'} align={'center'}>\n      Your <b>median cycle</b> length is {median} days.\n    </Typography>\n  </div>\n)\n","import React from 'react'\nimport { histogram, max, min } from 'd3-array'\nimport { scaleLinear } from 'd3-scale'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  bar: {\n    fill: theme.palette.primary.main,\n    opacity: 0.5,\n    strokeWidth: 1,\n    stroke: theme.palette.background.default,\n  },\n  barBackdrop: {\n    fill: 'white',\n  },\n  dot: {\n    fill: theme.palette.secondary.main,\n  },\n  line: {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 1,\n  },\n  text: {\n    fill: theme.palette.text.primary,\n    textAnchor: 'middle',\n    fontSizeAdjust: 0.4,\n    dominantBaseline: 'central',\n  },\n}))\n\ninterface Props {\n  readonly width: number\n  readonly height: number\n  readonly currentDay: number\n  readonly median: number\n  readonly cycleDurations: ReadonlyArray<number>\n}\n\nexport const CycleDurationHistogram = ({ width, height, currentDay, median, cycleDurations }: Props) => {\n  const classes = useStyles()\n\n  const marginTop = 10\n  const marginBottom = 20\n\n  const binMin = min(cycleDurations) ?? 20\n  const binMax = max(cycleDurations) ?? 35\n\n  const x = scaleLinear()\n    .domain([binMin, binMax + 1])\n    .range([0, width])\n  const bins = histogram().thresholds(x.ticks(binMax - binMin))(cycleDurations)\n\n  const y = scaleLinear()\n    .domain([0, max(bins, (d) => d.length) ?? 0])\n    .nice()\n    .range([height - marginBottom, marginTop])\n\n  const binWidth = width / bins.length\n  const currentDayBin = currentDay >= binMin ? bins[currentDay - binMin] : undefined\n\n  const medianX = x(median + 0.5)\n\n  return (\n    <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n      <line className={classes.line} x1={medianX} x2={medianX} y1={marginTop / 2} y2={height - marginBottom / 2 - 5} />\n      <text className={classes.text} x={medianX} y={height - marginBottom / 2}>\n        {median}\n      </text>\n      {bins.map((b, i) => {\n        const h = y(0) - y(b.length)\n        return (\n          <g key={`bin-${i}`}>\n            <rect\n              className={`${classes.bar}, ${classes.barBackdrop}`}\n              x={x(b.x0!)}\n              y={y(b.length)}\n              width={binWidth}\n              height={h}\n            />\n            <rect className={classes.bar} x={x(b.x0!)} y={y(b.length)} width={binWidth} height={h} />\n          </g>\n        )\n      })}\n      {currentDayBin && (\n        <circle\n          className={classes.dot}\n          cx={x(currentDay + 0.5)}\n          cy={y(currentDayBin.length) - binWidth / 2}\n          r={binWidth / 3}\n          strokeWidth={0}\n        />\n      )}\n    </svg>\n  )\n}\n","import { CycleDescription } from './CycleDescription'\nimport { CycleDurationHistogram } from './CycleDurationHistogram'\nimport * as React from 'react'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gridGap: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  readonly currentDay: number\n  readonly median: number\n  readonly lastStartDate: number\n  readonly cycleDurations: ReadonlyArray<number>\n}\n\nexport const CycleStats = ({ currentDay, median, lastStartDate, cycleDurations }: Props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CycleDescription currentDay={currentDay} median={median} lastStartDate={lastStartDate} />\n      <CycleDurationHistogram\n        width={200}\n        height={150}\n        currentDay={currentDay}\n        median={median}\n        cycleDurations={cycleDurations}\n      />\n    </div>\n  )\n}\n","import { CycleStats as CycleStatsComponent } from '../components/CycleStats'\nimport * as React from 'react'\nimport { useState } from 'react'\nimport useInterval from '@use-it/interval'\nimport { useTypedSelector } from '../../store'\nimport { Cycle, CycleHistory } from '../model'\nimport startOfToday from 'date-fns/startOfToday'\nimport { differenceInDays } from 'date-fns'\n\nexport const medianCycleLength = (durations: ReadonlyArray<number>) => {\n  const median = (values: ReadonlyArray<number>) => {\n    const mid = Math.floor(values.length / 2),\n      nums = [...values].sort((a, b) => a - b)\n    return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n  }\n  return median(durations)\n}\n\nexport const cycleDurations = (cycles: ReadonlyArray<Cycle>) => cycles.map((c) => c.duration)\n\nexport const CycleStats = () => {\n  const [today, setToday] = useState<number>(startOfToday().valueOf())\n\n  useInterval(() => {\n    setToday(startOfToday().valueOf())\n  }, 1000 * 60)\n\n  const history = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\n  if (history) {\n    const durations = cycleDurations(history.pastCycles)\n    const lastStartDate = history.currentCycle.startDate\n    const median = medianCycleLength(durations)\n    const daysPast = differenceInDays(today, lastStartDate)\n    const day = Math.floor(daysPast) + 1 // start date is cycle day 1\n    return (\n      <CycleStatsComponent currentDay={day} median={median} lastStartDate={lastStartDate} cycleDurations={durations} />\n    )\n  } else {\n    return <div />\n  }\n}\n","import { defaultThemeState } from '../theme'\nimport { RootState } from './model'\nimport { defaultCycleState } from '../cycle'\nimport { defaultDatabaseState } from '../db'\n\nexport const defaultRootState: RootState = {\n  database: defaultDatabaseState,\n  theme: defaultThemeState,\n  cycle: defaultCycleState,\n}\n","import { ThemeAction, themeReducer } from '../theme'\nimport { RootAction } from './actions'\nimport { RootState } from './model'\nimport { defaultRootState } from './default'\nimport { cycleReducer } from '../cycle'\nimport { CycleAction } from '../cycle'\nimport { DatabaseAction, dbReducer } from '../db'\n\nexport const rootReducer = (state: RootState = defaultRootState, action: RootAction): RootState => ({\n  database: dbReducer(state.database, action as DatabaseAction),\n  theme: themeReducer(state.theme, action as ThemeAction),\n  cycle: cycleReducer(state.cycle, action as CycleAction),\n})\n","import { createStore, Store, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './reducer'\nimport { RootState } from './model'\nimport { RootAction } from './actions'\nimport thunk from 'redux-thunk'\n\nexport const configureStore = (): Store<RootState, RootAction> => {\n  return createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport { Button, Card, CardActions, CardContent, TextField } from '@material-ui/core'\nimport DateFnsAdapter from '@material-ui/pickers/adapter/date-fns'\nimport deLocale from 'date-fns/locale/de'\nimport startOfToday from 'date-fns/startOfToday'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  content: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    width: '100%',\n  },\n  actions: {\n    display: 'grid',\n    justifyItems: 'end',\n  },\n})\n\ninterface Props {\n  readonly onAdd: (date: number) => void\n}\n\nexport const CycleAdd = ({ onAdd }: Props) => {\n  const classes = useStyles()\n  const [selectedDate, handleDateChange] = useState<number>(startOfToday().valueOf())\n  const [isValid, setValid] = useState<boolean>(true)\n\n  const onChange = (date: any) => date && handleDateChange((date as Date).valueOf())\n  const handleSubmit = () => onAdd(selectedDate)\n  const handleError = (e: any) => setValid(e === null)\n\n  return (\n    <Card className={classes.root} variant={'outlined'}>\n      <CardContent className={classes.content}>\n        <LocalizationProvider dateAdapter={DateFnsAdapter} locale={deLocale}>\n          <DatePicker\n            label=\"Cycle Start Date\"\n            value={selectedDate}\n            onChange={onChange}\n            onError={handleError}\n            renderInput={(props) => <TextField {...props} />}\n            mask={'__.__.____'}\n            disableFuture={true}\n            showTodayButton={true}\n            autoOk={true}\n          />\n        </LocalizationProvider>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant={'contained'} color=\"primary\" disabled={!isValid} onClick={handleSubmit}>\n          Add\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { CycleHistory } from '../model'\nimport { IconButton, List, ListItemSecondaryAction, ListItemText } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { CycleId } from '../../db'\nimport { CycleAdd } from './CycleAdd'\nimport { f } from '../utils'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    width: '100%',\n    justifyItems: 'center',\n  },\n  list: {\n    width: '100%',\n  },\n})\n\ninterface Props {\n  readonly cycleHistory?: CycleHistory\n  readonly onAdd: (date: number) => void\n  readonly onDelete: (id: CycleId) => void\n}\n\nexport const CycleData = ({ cycleHistory, onAdd, onDelete }: Props) => {\n  const classes = useStyles()\n  const cycles = cycleHistory ? [cycleHistory.currentCycle, ...cycleHistory.pastCycles] : []\n  return (\n    <div className={classes.root}>\n      <CycleAdd onAdd={onAdd} />\n      <List className={classes.list}>\n        {cycles.map((cycle) => {\n          return (\n            <ListItem key={cycle.id}>\n              <ListItemText>{f(cycle.startDate)}</ListItemText>\n              <ListItemSecondaryAction>\n                <IconButton edge={'end'} aria-label={'delete'} onClick={() => onDelete(cycle.id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n}\n","import React from 'react'\nimport { CycleData as CycleDataComponent } from '../components/CycleData'\nimport { useTypedSelector } from '../../store'\nimport { CycleHistory } from '../model'\nimport { useDispatch } from 'react-redux'\nimport { addStartDate, deleteStartDate, LoginState, CycleId } from '../../db'\n\ninterface Props {\n  readonly loginState: LoginState\n}\n\nexport const CycleData = ({ loginState }: Props) => {\n  const cycleHistory = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\n  const dispatch = useDispatch()\n  const onAdd = (date: number) => dispatch(addStartDate(date, loginState))\n  const onDelete = (id: CycleId) => dispatch(deleteStartDate(id, loginState))\n  return <CycleDataComponent cycleHistory={cycleHistory} onAdd={onAdd} onDelete={onDelete} />\n}\n","import parse from 'date-fns/parse'\nimport { DATE_FORMAT_IMPORT_EXPORT } from './utils'\n\nconst cycleStartDates: string[] = []\n\nexport const mockCycleStartDates: ReadonlyArray<number> = cycleStartDates.map((d) =>\n  parse(d, DATE_FORMAT_IMPORT_EXPORT, new Date()).valueOf()\n)\n","import { ReactElement, useEffect, useState } from 'react'\nimport { useTypedSelector } from '../../store'\nimport userbase, { Item } from 'userbase-js'\nimport { useDispatch } from 'react-redux'\nimport { RawCycle, updateCycles } from '../../cycle'\nimport { dbInitFailed, dbInitInProgress, loginSuccessful, showLoginForm, cycleDatabaseName } from '../actions'\nimport { CycleId } from '../model'\nimport { mockCycleStartDates } from '../../cycle/mocks'\n\ninterface Props {\n  children: ReactElement\n}\n\nexport const DataProvider = ({ children }: Props) => {\n  const existingStartDates = useTypedSelector<ReadonlyArray<number>>(\n    (s) => s.cycle.history?.pastCycles.map((c) => c.startDate) ?? []\n  )\n  const loginState = useTypedSelector((s) => s.database.authState)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const appId = process.env.REACT_APP_USERBASE_APP_ID || new URLSearchParams(window.location.search).get('id') || ''\n    if (appId.length === 36) {\n      dispatch(dbInitInProgress())\n      userbase\n        .init({ appId })\n        .then((session) => {\n          if (session.user) {\n            dispatch(loginSuccessful(session.user))\n          } else {\n            dispatch(showLoginForm())\n          }\n        })\n        .catch((error) => dispatch(dbInitFailed(error)))\n    }\n  }, [dispatch])\n\n  const [isDatabaseOpen, setDatabaseOpen] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (loginState.type === 'logged-in') {\n      const databaseName = cycleDatabaseName(loginState)\n      console.log(`DB openDatabase ${databaseName} ...`)\n      userbase\n        .openDatabase({\n          databaseName,\n          changeHandler: (items: ReadonlyArray<Item>) => {\n            const startDates = items.map<RawCycle>((i) => ({\n              id: i.itemId as CycleId,\n              startDate: i.item,\n            }))\n            dispatch(updateCycles(startDates))\n          },\n        })\n        .then(() => {\n          setDatabaseOpen(true)\n          console.log(`DB openDatabase ${databaseName} successful`)\n        })\n        .catch((err) => console.log(`DB openDatabase ${databaseName} failed ${err}`))\n    }\n  }, [loginState, dispatch])\n\n  useEffect(() => {\n    if (loginState.type === 'logged-in' && isDatabaseOpen && loginState.user.username.startsWith('r')) {\n      const databaseName = cycleDatabaseName(loginState)\n      console.log(`DB insert mock start dates into ${databaseName} ...`)\n      mockCycleStartDates.forEach((msSinceEpoch) => {\n        if (existingStartDates.find((e) => e === msSinceEpoch)) {\n          return\n        } else {\n          userbase\n            .insertItem({\n              databaseName,\n              itemId: `${msSinceEpoch}`,\n              item: msSinceEpoch,\n            })\n            .catch((_) => {\n              // /** fails due to duplicates expected **/\n            })\n        }\n      })\n    }\n  }, [isDatabaseOpen, existingStartDates, loginState, dispatch])\n\n  return children\n}\n","import React, { useState } from 'react'\nimport { Button, CircularProgress, TextField, Theme } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { LoginFormState } from '../model'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    display: 'grid',\n    gridTemplateRows: 'auto auto auto',\n    gridRowGap: theme.spacing(2),\n  },\n  button: {\n    minHeight: 24,\n  },\n}))\n\ninterface Props {\n  state: LoginFormState\n  onSubmit: (username: string, password: string) => void\n}\n\nexport const LoginForm = ({ state, onSubmit }: Props) => {\n  const classes = useStyles()\n\n  const [username, setUsername] = useState<string>(process.env.REACT_APP_USERBASE_USERNAME ?? '')\n  const [password, setPassword] = useState<string>(process.env.REACT_APP_USERBASE_PASSWORD ?? '')\n  const isSubmitted = state.type === 'login-form-submitted'\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    onSubmit(username, password)\n  }\n  return (\n    <form className={classes.root} noValidate={true} autoComplete=\"off\" onSubmit={handleSubmit}>\n      <TextField\n        id=\"username\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"Username\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        disabled={isSubmitted}\n      />\n      <TextField\n        id=\"password\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"Password\"\n        type={'password'}\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        disabled={isSubmitted}\n      />\n      <Button\n        className={classes.button}\n        disabled={isSubmitted || username.trim().length === 0 || password.trim().length === 0}\n        type=\"submit\"\n        variant={'contained'}\n        color=\"primary\"\n      >\n        {isSubmitted ? <CircularProgress size={20} /> : 'Log In'}\n      </Button>\n    </form>\n  )\n}\n","import React from 'react'\nimport { LoginForm as LoginFormComponent } from '../components/LoginForm'\nimport { useDispatch } from 'react-redux'\nimport userbase, { UserResult } from 'userbase-js'\nimport { loginFormError, loginFormSubmitted, loginSuccessful } from '../actions'\nimport { LoginFormState } from '../model'\n\ninterface Props {\n  readonly state: LoginFormState\n}\n\nexport const LoginForm = ({ state }: Props) => {\n  const dispatch = useDispatch()\n  const onSubmit = (username: string, password: string) => {\n    dispatch(loginFormSubmitted())\n    userbase\n      .signIn({\n        username,\n        password,\n        rememberMe: 'session',\n      })\n      .then((user: UserResult) => {\n        return dispatch(loginSuccessful(user))\n      })\n      .catch((error) => dispatch(loginFormError(error)))\n  }\n  return <LoginFormComponent state={state} onSubmit={onSubmit} />\n}\n","import * as React from 'react'\nimport SaveIcon from '@material-ui/icons/SaveAlt'\nimport { IconButton } from '@material-ui/core'\n\ninterface Props {\n  onClick: () => void\n}\n\nexport const ExportCycleData = ({ onClick }: Props) => (\n  <IconButton color=\"inherit\" onClick={onClick}>\n    <SaveIcon />\n  </IconButton>\n)\n","import * as React from 'react'\nimport { ExportCycleData as ExportCycleDataComponent } from '../components/ExportCycleData'\nimport { useTypedDispatch, useTypedSelector } from '../../store'\nimport { exportCycleData } from '../actions'\nimport { CycleIOData, CycleState } from '../model'\nimport { f } from '../utils'\n\nconst exportableData = (cycleState: CycleState): CycleIOData => {\n  const history = cycleState.history\n  const allCycles = history ? [history.currentCycle, ...history.pastCycles] : []\n  return {\n    history: {\n      startDates: allCycles.map((c) => f(c.startDate)),\n    },\n  }\n}\n\nexport const ExportCycleData = () => {\n  const cycleState = useTypedSelector<CycleState>((s) => s.cycle)\n  const dispatch = useTypedDispatch()\n  const onClick = () => {\n    const data = exportableData(cycleState)\n    dispatch(exportCycleData(data))\n  }\n  return <ExportCycleDataComponent onClick={onClick} />\n}\n","export * from './model'\nexport * from './store'\nexport * from './useTypedSelector'\nexport * from './useTypedDispatch'\n","import { CircularProgress, Theme, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    justifyItems: 'center',\n    marginTop: theme.spacing(1),\n    gridRowGap: theme.spacing(2),\n  },\n}))\n\ninterface Props {\n  readonly label: string\n}\n\nexport const Progress = ({ label }: Props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CircularProgress size={100} />\n      <Typography variant={'body1'} align={'center'}>\n        {label}\n      </Typography>\n    </div>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport LockIcon from '@material-ui/icons/Lock'\n\nexport const PrivacyFirst = () => (\n  <Typography variant={'body1'} align={'center'}>\n    <LockIcon fontSize={'large'} />\n    <br />\n    This app uses a <b>privacy-first</b> approach and can only be accessed through a <b>personal</b> URL\n  </Typography>\n)\n","import { Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport ErrorIcon from '@material-ui/icons/Error'\n\ninterface Props {\n  readonly error: any\n}\n\nexport const Error = ({ error }: Props) => {\n  console.log(error)\n  return (\n    <Typography variant={'body1'} align={'center'}>\n      <ErrorIcon fontSize={'large'} color={'secondary'} />\n      <br />\n      Oops – something went wrong...\n    </Typography>\n  )\n}\n","import { AuthState, LoginForm } from '../../db'\nimport { CycleData, CycleStats } from '../../cycle'\nimport React, { useState } from 'react'\nimport { Progress } from './Progress'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport StatsIcon from '@material-ui/icons/Equalizer'\nimport DataIcon from '@material-ui/icons/Event'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { PrivacyFirst } from './PrivacyFirst'\nimport { Error } from './Error'\n\nconst useStyles = makeStyles({\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n  },\n})\n\ntype Tab = 'stats' | 'data'\n\ninterface Props {\n  readonly authState: AuthState\n}\n\nexport const Main = ({ authState }: Props) => {\n  const classes = useStyles()\n  const [navTab, setNavTab] = useState<Tab>('stats')\n\n  switch (authState.type) {\n    case 'no-app-id':\n      return <PrivacyFirst />\n    case 'db-init-in-progress':\n      return <Progress label={'Connecting to Server'} />\n    case 'db-init-failed':\n      return <Error error={authState.error} />\n    case 'login-form':\n      return <LoginForm state={authState.state} />\n    case 'logged-in':\n      return (\n        <div>\n          {navTab === 'stats' && <CycleStats />}\n          {navTab === 'data' && <CycleData loginState={authState} />}\n          <BottomNavigation\n            className={classes.bottomNav}\n            value={navTab}\n            onChange={(event, newValue) => {\n              setNavTab(newValue)\n            }}\n            showLabels={true}\n          >\n            <BottomNavigationAction label=\"Stats\" icon={<StatsIcon />} value={'stats'} />\n            <BottomNavigationAction label=\"Data\" icon={<DataIcon />} value={'data'} />\n          </BottomNavigation>\n        </div>\n      )\n    default:\n      return <div />\n  }\n}\n","import React from 'react'\nimport { Main as MainComponent } from '../components/Main'\nimport { useTypedSelector } from '../../store'\nimport { AuthState } from '../../db'\n\nexport const Main = () => {\n  const authState = useTypedSelector<AuthState>((s) => s.database.authState)\n  return <MainComponent authState={authState} />\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { ThemeSwitch } from '../../theme'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { ExportCycleData } from '../../cycle'\nimport { IconButton, Theme, Typography } from '@material-ui/core'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport { Main } from '../containers/Main'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    height: 64, // fix vertical toolbar item offset in safari\n  },\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto', // center is position 'absolute'\n  },\n  toolbarLeft: {\n    height: '100%',\n    marginRight: 'auto', // push to the left\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    alignItems: 'center',\n  },\n  toolbarCenter: {\n    // position centered on page (rather than in flow of toolbar items)\n    position: 'absolute',\n    width: '100%',\n    display: 'grid',\n    pointerEvents: 'none',\n    [theme.breakpoints.down('sm')]: {\n      visibility: 'hidden',\n    },\n  },\n  title: {\n    justifySelf: 'center',\n    color: theme.palette.primary.contrastText,\n  },\n  toolbarRight: {\n    height: '100%',\n    marginLeft: 'auto', // push to the right\n    display: 'grid',\n    gridTemplateColumns: 'auto',\n    alignItems: 'center',\n  },\n  main: {\n    display: 'grid',\n    width: '100vw',\n    gridTemplateRows: 'auto 1fr auto',\n    gridRowGap: 8,\n    paddingTop: 100,\n    paddingLeft: '20vw',\n    paddingRight: '20vw',\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '5vw',\n      paddingRight: '5vw',\n    },\n  },\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n  },\n}))\n\nexport const App = () => {\n  const classes = useStyles()\n  const onRefresh = () => window.location.reload()\n\n  return (\n    <div className=\"App\">\n      <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.toolbarLeft}>\n            <ExportCycleData />\n            <IconButton color=\"inherit\" onClick={onRefresh}>\n              <RefreshIcon />\n            </IconButton>\n          </div>\n          <div className={classes.toolbarCenter}>\n            <Typography\n              className={classes.title}\n              variant=\"h6\"\n            >{`${process.env.REACT_APP_NAME} v${process.env.REACT_APP_VERSION}`}</Typography>\n          </div>\n          <div className={classes.toolbarRight}>\n            <ThemeSwitch />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.main}>\n        <Main />\n      </div>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider, Theme } from '@material-ui/core'\nimport { useTypedSelector } from '../../store'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  const theme = useTypedSelector<Theme>((s) => s.theme)\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport { configureStore } from './store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { DataProvider } from './db'\n\nconst store = configureStore()\n\nconst Root = () => (\n  <Provider store={store}>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nserviceWorker.register()\n","import { UPDATE_AUTH_STATE } from './actionTypes'\nimport { AuthState, LoginState, LoginFormState, CycleId } from './model'\nimport userbase, { UserResult } from 'userbase-js'\n\nexport type DatabaseAction = UpdateAuthStateAction\n\ninterface UpdateAuthStateAction {\n  type: typeof UPDATE_AUTH_STATE\n  authState: AuthState\n}\n\nconst updateAuthState = (authState: AuthState): UpdateAuthStateAction => ({\n  type: UPDATE_AUTH_STATE,\n  authState,\n})\n\nexport const dbInitInProgress = () =>\n  updateAuthState({\n    type: 'db-init-in-progress',\n  })\n\nexport const dbInitFailed = (error: any) =>\n  updateAuthState({\n    type: 'db-init-failed',\n    error,\n  })\n\nconst updateLoginForm = (state: LoginFormState) =>\n  updateAuthState({\n    type: 'login-form',\n    state,\n  })\n\nexport const showLoginForm = () => updateLoginForm({ type: 'login-form-idle' })\nexport const loginFormSubmitted = () => updateLoginForm({ type: 'login-form-submitted' })\nexport const loginFormError = (error: any) => updateLoginForm({ type: 'login-form-error', error })\n\nexport const loginSuccessful = (user: UserResult) =>\n  updateAuthState({\n    type: 'logged-in',\n    user,\n  })\n\nexport const cycleDatabaseName = (loginState: LoginState) => `${loginState.user.username}-cycles-v1`\n\nexport const addStartDate = (date: number, loginState: LoginState) => async () => {\n  const databaseName = cycleDatabaseName(loginState)\n  return userbase\n    .insertItem({\n      databaseName,\n      itemId: `${date}`,\n      item: date,\n    })\n    .then(() => console.log('DB insertItem successful'))\n    .catch((e) => {\n      console.error('DB insertItem failed ' + e)\n    })\n}\n\nexport const deleteStartDate = (id: CycleId, loginState: LoginState) => async () => {\n  const databaseName = cycleDatabaseName(loginState)\n  return userbase\n    .deleteItem({\n      databaseName,\n      itemId: id,\n    })\n    .then(() => console.log('DB deleteItem successful'))\n    .catch((e) => {\n      console.error('DB deleteItem failed ' + e)\n    })\n}\n","export * from './actions'\nexport * from './reducer'\nexport * from './model'\nexport * from './default'\nexport * from './containers/CycleStats'\nexport * from './containers/CycleData'\nexport * from './containers/ExportCycleData'\n","export * from './model'\nexport * from './default'\nexport * from './actions'\nexport * from './reducer'\nexport * from './containers/DataProvider'\nexport * from './containers/LoginForm'\n","import format from 'date-fns/format'\nimport enLocale from 'date-fns/locale/en-US'\n\nexport const DATE_FORMAT_IMPORT_EXPORT = 'dd.MM.yyyy'\nconst DATE_FORMAT_WITH_WEEKDAY = 'EEEE, MMMM dd'\nconst DATE_FORMAT_WITHOUT_WEEKDAY = 'MMMM dd'\n\nexport const f = (date: number) => format(date, DATE_FORMAT_IMPORT_EXPORT)\n\nconst options = { locale: enLocale }\n\nexport const dateWithWeekDay = (date: number) => format(date, DATE_FORMAT_WITH_WEEKDAY, options)\nexport const dateWithoutWeekDay = (date: number) => format(date, DATE_FORMAT_WITHOUT_WEEKDAY, options)\n","export const TOGGLE_THEME = 'theme/TOGGLE_THEME'\n\nexport type ThemeAction = ToggleThemeAction\n\nexport interface ToggleThemeAction {\n  readonly type: typeof TOGGLE_THEME\n}\n\nexport const toggleTheme = (): ToggleThemeAction => {\n  return {\n    type: TOGGLE_THEME\n  }\n}\n","import { createMuiTheme, Theme } from '@material-ui/core'\n\nexport type ThemeState = Theme\n\nexport const lightTheme: Theme = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n})\n\nexport const darkTheme: Theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n})\n","import { Theme } from '@material-ui/core'\nimport { lightTheme } from './model'\n\nexport const defaultThemeState: Theme = lightTheme\n","import DarkThemeIcon from '@material-ui/icons/Brightness2'\nimport LightThemeIcon from '@material-ui/icons/WbSunny'\nimport * as React from 'react'\nimport { Switch, Theme } from '@material-ui/core'\nimport { darkTheme } from '../model'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    alignItems: 'center'\n  },\n  icon: {\n    margin: 4\n  }\n})\n\nexport interface Props {\n  readonly theme: Theme\n  readonly onToggleTheme: () => void\n}\n\nexport const ThemeSwitch = ({ theme, onToggleTheme }: Props) => {\n  const classes = useStyles(theme)\n  return (\n    <div className={classes.root}>\n      <LightThemeIcon className={classes.icon} />\n      <Switch checked={theme === darkTheme} onChange={onToggleTheme} color={'default'} />\n      <DarkThemeIcon className={classes.icon} />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { ThemeSwitch as ThemeSwitchComp } from '../components/ThemeSwitch'\nimport { ThemeAction, toggleTheme } from '../index'\nimport { useTypedDispatch, useTypedSelector } from '../../store'\nimport { Theme } from '@material-ui/core'\n\nexport const ThemeSwitch = () => {\n  const theme = useTypedSelector<Theme>((s) => s.theme)\n  const dispatch = useTypedDispatch<ThemeAction>()\n  const onToggleTheme = () => dispatch(toggleTheme())\n  return <ThemeSwitchComp theme={theme} onToggleTheme={onToggleTheme} />\n}\n","import { ThemeAction, TOGGLE_THEME } from './actions'\nimport { darkTheme, lightTheme, ThemeState } from './model'\n\nexport const themeReducer = (state: ThemeState, action: ThemeAction): ThemeState => {\n  if (action.type === TOGGLE_THEME) {\n    return state.palette.type === 'light' ? darkTheme : lightTheme\n  } else {\n    return state\n  }\n}\n","import FileSaver from 'file-saver'\nimport { CycleIOData, RawCycle } from './model'\nimport { UPDATE_CYCLES } from './actionTypes'\nimport format from 'date-fns/format'\n\nexport type CycleAction = UpdateCyclesAction\n\ninterface UpdateCyclesAction {\n  type: typeof UPDATE_CYCLES\n  cycles: ReadonlyArray<RawCycle>\n}\n\nexport const updateCycles = (cycles: ReadonlyArray<RawCycle>): UpdateCyclesAction => ({\n  type: UPDATE_CYCLES,\n  cycles,\n})\n\nexport const exportCycleData = (data: CycleIOData) => () => {\n  const blob = new Blob([JSON.stringify(data)], { type: 'text/json;charset=utf-8' })\n  const today = format(new Date().valueOf(), 'yyyyMMdd')\n  FileSaver.saveAs(blob, `cycle-data-${today}.json`)\n}\n","import { CycleState } from './model'\n\nexport const defaultCycleState: CycleState = {}\n"],"sourceRoot":""}