{"version":3,"sources":["theme/actions.ts","theme/model.ts","theme/defaults.ts","theme/components/ThemeSwitch.tsx","theme/containers/ThemeSwitch.tsx","theme/reducer.ts","cycle/actions.ts","cycle/actionTypes.ts","db/actionTypes.ts","cycle/reducer.ts","cycle/default.ts","db/model.ts","db/default.ts","db/reducer.ts","db/containers/DataProvider.tsx","store/useTypedSelector.ts","store/useTypedDispatch.ts","cycle/components/CycleDescription.tsx","cycle/components/shared.ts","cycle/components/CycleDurationHistogram.tsx","cycle/components/CycleBarChart.tsx","cycle/components/CycleStats.tsx","cycle/containers/CycleStats.tsx","store/default.ts","store/reducer.ts","store/store.ts","cycle/components/CycleAdd.tsx","cycle/components/CycleData.tsx","cycle/containers/CycleData.tsx","db/components/LoginForm.tsx","db/containers/LoginForm.tsx","cycle/components/ExportCycleData.tsx","cycle/containers/ExportCycleData.tsx","store/index.ts","db/userbase.ts","db/index.ts","app/components/Main.tsx","app/containers/Main.tsx","app/components/App.tsx","app/containers/App.tsx","serviceWorker.ts","index.tsx","cycle/index.ts","cycle/utils.ts","db/actions.ts"],"names":["toggleTheme","type","lightTheme","createMuiTheme","palette","darkTheme","defaultThemeState","useStyles","makeStyles","root","display","gridTemplateColumns","alignItems","icon","margin","ThemeSwitch","theme","onToggleTheme","classes","className","Switch","checked","onChange","color","useTypedSelector","s","dispatch","useTypedDispatch","themeReducer","state","action","updateCycles","cycles","UPDATE_CYCLES","exportCycleData","data","blob","Blob","JSON","stringify","today","format","Date","valueOf","FileSaver","saveAs","UPDATE_AUTH_STATE","cycleReducer","length","history","rawCycles","latestRawCycle","currentCycle","id","startDate","duration","differenceInDays","startOfToday","pastCycles","flatMap","rawCycle","index","from","to","Math","abs","cycleHistory","sort","a","b","compareDesc","defaultCycleState","CycleIdBrand","defaultDatabaseState","authState","demoDatabaseState","user","demoUser","dbReducer","DataProvider","children","loginState","database","useDispatch","useEffect","databaseName","cycleDatabaseName","console","log","userbase","openDatabase","changeHandler","items","startDates","map","i","itemId","item","then","catch","err","useSelector","userName","textTransform","CycleDescription","currentDay","median","lastStartDate","expectedStartDate","addDays","expectedStart","isBefore","dateWithWeekDay","Typography","variant","align","dateWithoutWeekDay","fd","date","width","height","justifyItems","bar","fill","lighten","primary","main","strokeWidth","stroke","background","default","dot","secondary","line","text","textAnchor","fontSize","dominantBaseline","CycleDurationHistogram","cycleDurations","c","binMin","min","binMax","max","x","scaleLinear","domain","range","bins","histogram","thresholds","ticks","y","d","nice","binWidth","currentDayBin","undefined","medianX","viewBox","x1","x2","y1","marginTop","y2","marginBottom","h","key","x0","cx","cy","r","label","CycleBarChart","barWidth","useTheme","reverse","toAxisLabel","currentDuration","pastDuration","medianMarker","axis","value","lineStyle","keys","colors","layout","padding","enableGridY","isInteractive","layers","labels","bars","barDatum","transform","top","right","bottom","left","textColor","markers","endDate","gridGap","spacing","CycleStats","useDividerStyles","container","border","borderBottom","content","paddingTop","paddingBottom","paddingRight","paddingLeft","fontWeight","whiteSpace","Divider","useState","setToday","useInterval","cycle","username","values","mid","floor","nums","daysPast","day","defaultRootState","isDemoMode","rootReducer","configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","actions","CycleAdd","onAdd","selectedDate","handleDateChange","isValid","setValid","Card","CardContent","dateAdapter","DateFnsAdapter","locale","deLocale","onError","e","renderInput","props","TextField","mask","disableFuture","showTodayButton","autoOk","CardActions","Button","disabled","onClick","list","CycleData","onDelete","List","ListItem","ListItemText","f","ListItemSecondaryAction","IconButton","edge","aria-label","addStartDate","deleteStartDate","gridTemplateRows","gridRowGap","button","minHeight","LoginForm","onSubmit","process","appId","setAppId","setUsername","password","setPassword","isSubmitted","isInvalidCredentials","field","noValidate","autoComplete","preventDefault","fullWidth","event","target","error","trim","CircularProgress","size","isDbInitialized","setDbInitialized","credentials","setCredentials","debug","init","loginFormError","signOut","signIn","loginSuccessful","toString","startsWith","loginFormSubmitted","ExportCycleData","cycleState","exportableData","userId","authToken","creationDate","paymentsMode","DemoUserbase","this","Promise","resolve","params","find","newItems","filter","URLSearchParams","window","location","search","has","parse","DATE_FORMAT_IMPORT_EXPORT","d1","d2","userbaseDB","bottomNav","position","Main","navTab","setNavTab","BottomNavigation","newValue","showLabels","BottomNavigationAction","appBar","toolbar","toolbarLeft","marginRight","toolbarCenter","pointerEvents","breakpoints","down","visibility","title","justifySelf","contrastText","toolbarRight","marginLeft","App","AppBar","Toolbar","ThemeProvider","CssBaseline","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","options","enLocale","updateAuthState","updateLoginForm","insertItem","deleteItem"],"mappings":"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","file":"static/js/main.e87e6d55.chunk.js","sourcesContent":["export const TOGGLE_THEME = 'theme/TOGGLE_THEME'\n\nexport type ThemeAction = ToggleThemeAction\n\nexport interface ToggleThemeAction {\n  readonly type: typeof TOGGLE_THEME\n}\n\nexport const toggleTheme = (): ToggleThemeAction => {\n  return {\n    type: TOGGLE_THEME\n  }\n}\n","import { createMuiTheme, Theme } from '@material-ui/core'\n\nexport type ThemeState = Theme\n\nexport const lightTheme: Theme = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n})\n\nexport const darkTheme: Theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n})\n","import { Theme } from '@material-ui/core'\nimport { lightTheme } from './model'\n\nexport const defaultThemeState: Theme = lightTheme\n","import DarkThemeIcon from '@material-ui/icons/Brightness2'\nimport LightThemeIcon from '@material-ui/icons/WbSunny'\nimport * as React from 'react'\nimport { Switch, Theme } from '@material-ui/core'\nimport { darkTheme } from '../model'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    alignItems: 'center'\n  },\n  icon: {\n    margin: 4\n  }\n})\n\nexport interface Props {\n  readonly theme: Theme\n  readonly onToggleTheme: () => void\n}\n\nexport const ThemeSwitch = ({ theme, onToggleTheme }: Props) => {\n  const classes = useStyles(theme)\n  return (\n    <div className={classes.root}>\n      <LightThemeIcon className={classes.icon} />\n      <Switch checked={theme === darkTheme} onChange={onToggleTheme} color={'default'} />\n      <DarkThemeIcon className={classes.icon} />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { ThemeSwitch as ThemeSwitchComp } from '../components/ThemeSwitch'\nimport { ThemeAction, toggleTheme } from '../index'\nimport { useTypedDispatch, useTypedSelector } from '../../store'\nimport { Theme } from '@material-ui/core'\n\nexport const ThemeSwitch = () => {\n  const theme = useTypedSelector<Theme>((s) => s.theme)\n  const dispatch = useTypedDispatch<ThemeAction>()\n  const onToggleTheme = () => dispatch(toggleTheme())\n  return <ThemeSwitchComp theme={theme} onToggleTheme={onToggleTheme} />\n}\n","import { ThemeAction, TOGGLE_THEME } from './actions'\nimport { darkTheme, lightTheme, ThemeState } from './model'\n\nexport const themeReducer = (state: ThemeState, action: ThemeAction): ThemeState => {\n  if (action.type === TOGGLE_THEME) {\n    return state.palette.type === 'light' ? darkTheme : lightTheme\n  } else {\n    return state\n  }\n}\n","import FileSaver from 'file-saver'\nimport { CycleIOData, RawCycle } from './model'\nimport { UPDATE_CYCLES } from './actionTypes'\nimport format from 'date-fns/format'\n\nexport type CycleAction = UpdateCyclesAction\n\ninterface UpdateCyclesAction {\n  type: typeof UPDATE_CYCLES\n  cycles: ReadonlyArray<RawCycle>\n}\n\nexport const updateCycles = (cycles: ReadonlyArray<RawCycle>): UpdateCyclesAction => ({\n  type: UPDATE_CYCLES,\n  cycles,\n})\n\nexport const exportCycleData = (data: CycleIOData) => () => {\n  const blob = new Blob([JSON.stringify(data)], { type: 'text/json;charset=utf-8' })\n  const today = format(new Date().valueOf(), 'yyyyMMdd')\n  FileSaver.saveAs(blob, `cycle-data-${today}.json`)\n}\n","export const UPDATE_CYCLES = 'cycle/UPDATE_CYCLES'\n","export const UPDATE_AUTH_STATE = 'db/UPDATE_AUTH_STATE'\n","import { CycleHistory, CycleState, PastCycle, RawCycle } from './model'\nimport { CycleAction } from './actions'\nimport { UPDATE_CYCLES } from './actionTypes'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport startOfToday from 'date-fns/startOfToday'\nimport { compareDesc } from 'date-fns'\n\nexport const cycleReducer = (state: CycleState, action: CycleAction): CycleState => {\n  switch (action.type) {\n    case UPDATE_CYCLES: {\n      if (action.cycles.length > 0) {\n        const startDates = [...action.cycles].sort((a, b) => compareDesc(a.startDate, b.startDate))\n        const history = cycleHistory(startDates)\n        return {\n          ...state,\n          history,\n        }\n      } else {\n        return state\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport function cycleHistory(rawCycles: ReadonlyArray<RawCycle>): CycleHistory {\n  const latestRawCycle = rawCycles[0]\n  return {\n    currentCycle: {\n      id: latestRawCycle.id,\n      startDate: latestRawCycle.startDate,\n      duration: differenceInDays(startOfToday(), latestRawCycle.startDate),\n      type: 'current',\n    },\n    pastCycles: rawCycles.flatMap<PastCycle>((rawCycle, index, rawCycles) => {\n      if (index > 0) {\n        const from = rawCycles[index - 1].startDate\n        const to = rawCycle.startDate\n        const duration = Math.abs(differenceInDays(from, to))\n        return [\n          {\n            ...rawCycle,\n            type: 'past',\n            duration,\n          },\n        ]\n      } else {\n        return []\n      }\n    }),\n  }\n}\n","import { CycleState } from './model'\n\nexport const defaultCycleState: CycleState = {}\n","import { UserResult } from 'userbase-js'\n\n/* ·················································································································· */\n/*  Redux State\n/* ·················································································································· */\n\nexport interface DatabaseState {\n  readonly authState: AuthState\n}\n\nexport type AuthState = DisplayLoginForm | DbInitInProgress | DbInitFailed | LoginState\n\nexport interface DisplayLoginForm {\n  type: 'login-form'\n  state: LoginFormState\n}\n\nexport type LoginFormState = LoginFormIdle | LoginFormSubmitted | LoginFormError\n\nexport interface LoginFormIdle {\n  type: 'login-form-idle'\n}\n\nexport interface LoginFormSubmitted {\n  type: 'login-form-submitted'\n}\n\nexport type LoginFormField = 'appId' | 'credentials'\n\nexport interface LoginFormError {\n  type: 'login-form-error'\n  field: LoginFormField\n  error: string\n}\n\nexport interface LoginState {\n  type: 'logged-in'\n  user: UserResult\n}\n\nexport interface DbInitInProgress {\n  type: 'db-init-in-progress'\n}\n\nexport interface DbInitFailed {\n  type: 'db-init-failed'\n  error: any\n}\n\n/* ·················································································································· */\n/*  Userbase IDs\n/* ·················································································································· */\n\nenum CycleIdBrand {}\n\nexport type CycleId = CycleIdBrand & string\n","import { DatabaseState } from './model'\nimport { demoUser } from './userbase'\n\nexport const defaultDatabaseState: DatabaseState = {\n  authState: {\n    type: 'login-form',\n    state: {\n      type: 'login-form-idle',\n    },\n  },\n}\n\nexport const demoDatabaseState: DatabaseState = {\n  authState: {\n    type: 'logged-in',\n    user: demoUser,\n  },\n}\n","import { DatabaseState } from './model'\nimport { DatabaseAction } from './actions'\nimport { UPDATE_AUTH_STATE } from './actionTypes'\n\nexport const dbReducer = (state: DatabaseState, action: DatabaseAction): DatabaseState => {\n  switch (action.type) {\n    case UPDATE_AUTH_STATE:\n      return {\n        ...state,\n        authState: action.authState,\n      }\n    default:\n      return state\n  }\n}\n","import { ReactElement, useEffect } from 'react'\nimport { useTypedSelector } from '../../store'\nimport { useDispatch } from 'react-redux'\nimport { RawCycle, updateCycles } from '../../cycle'\nimport { cycleDatabaseName } from '../actions'\nimport { CycleId } from '../model'\nimport { userbase, Item } from '../userbase'\n\ninterface Props {\n  children: ReactElement\n}\n\nexport const DataProvider = ({ children }: Props) => {\n  const loginState = useTypedSelector((s) => s.database.authState)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (loginState.type === 'logged-in') {\n      const databaseName = cycleDatabaseName(loginState)\n      console.log(`DB openDatabase ${databaseName} ...`)\n      userbase\n        .openDatabase({\n          databaseName,\n          changeHandler: (items: ReadonlyArray<Item>) => {\n            const startDates = items.map<RawCycle>((i) => ({\n              id: i.itemId as CycleId,\n              startDate: i.item,\n            }))\n            dispatch(updateCycles(startDates))\n          },\n        })\n        .then(() => {\n          console.log(`DB openDatabase ${databaseName} successful`)\n        })\n        .catch((err) => console.log(`DB openDatabase ${databaseName} failed ${err}`))\n    }\n  }, [loginState, dispatch])\n\n  return children\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport { RootState } from './model'\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useDispatch } from 'react-redux'\nimport { RootAction } from './actions'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { RootState } from './model'\n\nexport const useTypedDispatch = <A extends RootAction>() => useDispatch<ThunkDispatch<RootState, {}, A>>()\n","import * as React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { dateWithoutWeekDay, dateWithWeekDay } from '../utils'\nimport addDays from 'date-fns/addDays'\nimport { isBefore } from 'date-fns'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  userName: {\n    textTransform: 'capitalize',\n  },\n})\n\ninterface Props {\n  readonly userName: string\n  readonly currentDay: number\n  readonly median: number\n  readonly lastStartDate: number\n}\n\nexport const CycleDescription = ({ userName, currentDay, median, lastStartDate }: Props) => {\n  const classes = useStyles()\n  const expectedStartDate = addDays(lastStartDate, median - 1).valueOf()\n  const expectedStart = isBefore(expectedStartDate, new Date()) ? (\n    <b>{'today'}</b>\n  ) : (\n    <div>\n      {'on '}\n      <b>{dateWithWeekDay(expectedStartDate)}</b>\n    </div>\n  )\n\n  return (\n    <div>\n      <Typography variant={'body1'} align={'center'}>\n        Hey <span className={classes.userName}>{userName}</span> – today is {dateWithWeekDay(new Date().valueOf())}\n      </Typography>\n      <Typography variant={'h1'} align={'center'}>\n        {currentDay}\n      </Typography>\n      <Typography variant={'body1'} align={'center'}>\n        days since your last period, which started on {dateWithoutWeekDay(lastStartDate)}.\n      </Typography>\n      <br />\n      <Typography variant={'body1'} align={'center'}>\n        Your next period is expected {expectedStart}.\n      </Typography>\n    </div>\n  )\n}\n","import { format } from 'date-fns'\n\nexport const barLighteningCoefficient = 0.5\nexport const fd = (date: number | Date) => format(date, 'dd.MM.yyyy')\n","import React from 'react'\nimport { histogram, max, min } from 'd3-array'\nimport { scaleLinear } from 'd3-scale'\nimport { lighten, makeStyles, Theme } from '@material-ui/core/styles'\nimport { CycleHistory } from '../model'\nimport { barLighteningCoefficient } from './shared'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    height: '100%',\n    justifyItems: 'center',\n  },\n  bar: {\n    fill: lighten(theme.palette.primary.main, barLighteningCoefficient),\n    strokeWidth: 1,\n    stroke: theme.palette.background.default,\n  },\n  dot: {\n    fill: theme.palette.secondary.main,\n  },\n  line: {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 1,\n  },\n  text: {\n    fill: theme.palette.text.primary,\n    textAnchor: 'middle',\n    fontSize: 9,\n    dominantBaseline: 'central',\n  },\n}))\n\ninterface Props {\n  readonly width: number\n  readonly height: number\n  readonly currentDay: number\n  readonly median: number\n  readonly cycleHistory: CycleHistory\n}\n\nexport const CycleDurationHistogram = ({ width, height, currentDay, median, cycleHistory }: Props) => {\n  const classes = useStyles()\n\n  const marginTop = 10\n  const marginBottom = 20\n\n  const cycleDurations = cycleHistory.pastCycles.map((c) => c.duration)\n\n  const binMin = min(cycleDurations) ?? 20\n  const binMax = max(cycleDurations) ?? 35\n\n  const x = scaleLinear()\n    .domain([binMin, binMax + 1])\n    .range([0, width])\n  const bins = histogram().thresholds(x.ticks(binMax - binMin))(cycleDurations)\n\n  const y = scaleLinear()\n    .domain([0, max(bins, (d) => d.length) ?? 0])\n    .nice()\n    .range([height - marginBottom, marginTop])\n\n  const binWidth = width / bins.length\n  const currentDayBin = currentDay >= binMin ? bins[currentDay - binMin] : undefined\n\n  const medianX = x(median + 0.5)\n\n  return (\n    <div className={classes.root}>\n      <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n        <line\n          className={classes.line}\n          x1={medianX}\n          x2={medianX}\n          y1={marginTop / 2}\n          y2={height - marginBottom / 2 - 5}\n        />\n        <text className={classes.text} x={medianX} y={height - marginBottom / 2}>\n          {median}\n        </text>\n        {bins.map((b, i) => {\n          const h = y(0) - y(b.length)\n          return (\n            <rect key={`bin-${i}`} className={classes.bar} x={x(b.x0!)} y={y(b.length)} width={binWidth} height={h} />\n          )\n        })}\n        {currentDayBin && (\n          <circle\n            className={classes.dot}\n            cx={x(currentDay + 0.5)}\n            cy={y(currentDayBin.length) - binWidth / 2}\n            r={binWidth / 3}\n            strokeWidth={0}\n          />\n        )}\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Cycle, CycleHistory } from '../model'\nimport { BarDatum, BarItemProps, ResponsiveBar } from '@nivo/bar'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport { barLighteningCoefficient, fd } from './shared'\nimport { Theme, useTheme } from '@material-ui/core'\nimport { addDays } from 'date-fns'\nimport { CartesianMarkerProps } from '@nivo/core'\n\ninterface CycleBarDatum {\n  readonly id: string\n  readonly currentDuration: number\n  readonly pastDuration: number\n}\n\nconst fontSize = 9\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: (height: number) => ({ width: '100%', height }),\n  label: {\n    fill: theme.palette.text.primary,\n    dominantBaseline: 'central',\n    fontSize,\n  },\n}))\n\nconst barWidth = 15\nconst barPadding = 0.2\nconst labelPadding = -12\n\ninterface Props {\n  readonly cycleHistory: CycleHistory\n  readonly median: number\n}\n\nexport const CycleBarChart = ({ cycleHistory, median }: Props) => {\n  const pastCycles = cycleHistory.pastCycles\n  const height = barWidth * (1 + barPadding) * pastCycles.length\n  const classes = useStyles(height)\n  const theme = useTheme()\n\n  const cycles = [cycleHistory.currentCycle, ...pastCycles].reverse().map<CycleBarDatum>((c) => ({\n    id: toAxisLabel(c),\n    currentDuration: c.type === 'current' ? c.duration + 1 : 0,\n    pastDuration: c.type === 'past' ? c.duration : 0,\n  }))\n\n  const currentCycleLabel = ({ bars }: { bars: BarItemProps[] }) => {\n    const labels = bars.map(({ data, x, y, width, height }) => {\n      const barDatum: BarDatum = data.data\n      return (\n        <text\n          className={classes.label}\n          key={`${data.id}/${data.index}`}\n          x={x}\n          y={y}\n          transform={`translate(${width + labelPadding},${height / 2})`}\n        >\n          {data.id === 'currentDuration' && data.index === cycles.length - 1 ? barDatum.currentDuration : ''}\n          {data.id === 'pastDuration' && data.index <= cycles.length ? barDatum.pastDuration : ''}\n        </text>\n      )\n    })\n    return <g>{labels}</g>\n  }\n\n  const medianMarker: CartesianMarkerProps = {\n    axis: 'x',\n    value: median,\n    lineStyle: { stroke: theme.palette.secondary.main, strokeWidth: 0.5 },\n  }\n\n  return (\n    <div className={classes.root}>\n      <ResponsiveBar\n        data={cycles}\n        keys={['currentDuration', 'pastDuration']}\n        colors={['lavender', lighten(theme.palette.primary.main, barLighteningCoefficient)]}\n        layout={'horizontal'}\n        padding={barPadding}\n        enableGridY={false}\n        isInteractive={false} // disable tooltips\n        layers={['markers', 'axes', 'bars', currentCycleLabel]}\n        margin={{ top: 0, right: 0, bottom: 0, left: 115 }}\n        label={() => ''} // disable default labels\n        theme={{ fontSize, textColor: theme.palette.text.primary }}\n        markers={[medianMarker]}\n      />\n    </div>\n  )\n}\n\nfunction toAxisLabel(c: Cycle) {\n  const startDate = fd(c.startDate)\n  switch (c.type) {\n    case 'past':\n      const endDate = fd(addDays(c.startDate, c.duration))\n      return `${startDate} - ${endDate}`\n    default:\n      return `${startDate} - __.__.____`\n  }\n}\n","import { CycleDescription } from './CycleDescription'\nimport * as React from 'react'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { CycleHistory } from '../model'\nimport { CycleDurationHistogram } from './CycleDurationHistogram'\nimport { CycleBarChart } from './CycleBarChart'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gridGap: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  readonly userName: string\n  readonly currentDay: number\n  readonly median: number\n  readonly lastStartDate: number\n  readonly cycleHistory: CycleHistory\n}\n\nexport const CycleStats = ({ userName, currentDay, median, lastStartDate, cycleHistory }: Props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CycleDescription userName={userName} currentDay={currentDay} median={median} lastStartDate={lastStartDate} />\n      <Divider text={'Past Cycles'} />\n      <Typography variant={'body1'} align={'center'}>\n        Your <b>median cycle</b> length is {median} days.\n      </Typography>\n      <CycleBarChart cycleHistory={cycleHistory} median={median} />\n      <Divider text={'Duration Histogram'} />\n      <CycleDurationHistogram\n        width={200}\n        height={150}\n        currentDay={currentDay}\n        median={median}\n        cycleHistory={cycleHistory}\n      />\n    </div>\n  )\n}\n\n// https://stackoverflow.com/questions/61730527/react-create-a-horizontal-divider-with-text-in-between\n\nconst useDividerStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    marginTop: 12,\n  },\n  border: {\n    borderBottom: '2px solid lightgray',\n    width: '100%',\n  },\n  content: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    fontWeight: 500,\n    fontSize: 22,\n    color: 'lightgray',\n    whiteSpace: 'nowrap',\n  },\n}))\n\ninterface DividerProps {\n  readonly text: string\n}\n\nconst Divider = ({ text }: DividerProps) => {\n  const classes = useDividerStyles()\n  return (\n    <div className={classes.container}>\n      <div className={classes.border} />\n      <span className={classes.content}>{text}</span>\n      <div className={classes.border} />\n    </div>\n  )\n}\n","import { CycleStats as CycleStatsComponent } from '../components/CycleStats'\nimport * as React from 'react'\nimport { useState } from 'react'\nimport useInterval from '@use-it/interval'\nimport { useTypedSelector } from '../../store'\nimport { CycleHistory } from '../model'\nimport startOfToday from 'date-fns/startOfToday'\nimport { differenceInDays } from 'date-fns'\n\nexport const medianCycleLength = (durations: ReadonlyArray<number>) => {\n  const median = (values: ReadonlyArray<number>) => {\n    const mid = Math.floor(values.length / 2),\n      nums = [...values].sort((a, b) => a - b)\n    return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n  }\n  return median(durations)\n}\n\nexport const CycleStats = () => {\n  const [today, setToday] = useState<number>(startOfToday().valueOf())\n\n  useInterval(() => {\n    setToday(startOfToday().valueOf())\n  }, 1000 * 60)\n\n  const history = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\n  const userName = useTypedSelector<string>((s) => {\n    const authState = s.database.authState\n    return authState.type === 'logged-in' ? authState.user.username : ''\n  })\n  if (history) {\n    const lastStartDate = history.currentCycle.startDate\n    const median = medianCycleLength(history.pastCycles.map((c) => c.duration))\n    const daysPast = differenceInDays(today, lastStartDate)\n    const day = Math.floor(daysPast) + 1 // start date is cycle day 1\n    return (\n      <CycleStatsComponent\n        userName={userName}\n        currentDay={day}\n        median={median}\n        lastStartDate={lastStartDate}\n        cycleHistory={history}\n      />\n    )\n  } else {\n    return <div />\n  }\n}\n","import { defaultThemeState } from '../theme'\nimport { RootState } from './model'\nimport { defaultCycleState } from '../cycle'\nimport { defaultDatabaseState, demoDatabaseState, isDemoMode } from '../db'\n\nexport const defaultRootState: RootState = {\n  database: isDemoMode ? demoDatabaseState : defaultDatabaseState,\n  theme: defaultThemeState,\n  cycle: defaultCycleState,\n}\n","import { ThemeAction, themeReducer } from '../theme'\nimport { RootAction } from './actions'\nimport { RootState } from './model'\nimport { defaultRootState } from './default'\nimport { cycleReducer } from '../cycle'\nimport { CycleAction } from '../cycle'\nimport { DatabaseAction, dbReducer } from '../db'\n\nexport const rootReducer = (state: RootState = defaultRootState, action: RootAction): RootState => ({\n  database: dbReducer(state.database, action as DatabaseAction),\n  theme: themeReducer(state.theme, action as ThemeAction),\n  cycle: cycleReducer(state.cycle, action as CycleAction),\n})\n","import { createStore, Store, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './reducer'\nimport { RootState } from './model'\nimport { RootAction } from './actions'\nimport thunk from 'redux-thunk'\n\nexport const configureStore = (): Store<RootState, RootAction> => {\n  return createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport { Button, Card, CardActions, CardContent, TextField } from '@material-ui/core'\nimport DateFnsAdapter from '@material-ui/pickers/adapter/date-fns'\nimport deLocale from 'date-fns/locale/de'\nimport startOfToday from 'date-fns/startOfToday'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  content: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    width: '100%',\n  },\n  actions: {\n    display: 'grid',\n    justifyItems: 'end',\n  },\n})\n\ninterface Props {\n  readonly onAdd: (date: number) => void\n}\n\nexport const CycleAdd = ({ onAdd }: Props) => {\n  const classes = useStyles()\n  const [selectedDate, handleDateChange] = useState<number>(startOfToday().valueOf())\n  const [isValid, setValid] = useState<boolean>(true)\n\n  const onChange = (date: any) => date && handleDateChange((date as Date).valueOf())\n  const handleSubmit = () => onAdd(selectedDate)\n  const handleError = (e: any) => setValid(e === null)\n\n  return (\n    <Card className={classes.root} variant={'outlined'}>\n      <CardContent className={classes.content}>\n        <LocalizationProvider dateAdapter={DateFnsAdapter} locale={deLocale}>\n          <DatePicker\n            label=\"Cycle Start Date\"\n            value={selectedDate}\n            onChange={onChange}\n            onError={handleError}\n            renderInput={(props) => <TextField {...props} />}\n            mask={'__.__.____'}\n            disableFuture={true}\n            showTodayButton={true}\n            autoOk={true}\n          />\n        </LocalizationProvider>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant={'contained'} color=\"primary\" disabled={!isValid} onClick={handleSubmit}>\n          Add\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { CycleHistory } from '../model'\nimport { IconButton, List, ListItemSecondaryAction, ListItemText } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { CycleId } from '../../db'\nimport { CycleAdd } from './CycleAdd'\nimport { f } from '../utils'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    width: '100%',\n    justifyItems: 'center',\n  },\n  list: {\n    width: '100%',\n  },\n})\n\ninterface Props {\n  readonly cycleHistory?: CycleHistory\n  readonly onAdd: (date: number) => void\n  readonly onDelete: (id: CycleId) => void\n}\n\nexport const CycleData = ({ cycleHistory, onAdd, onDelete }: Props) => {\n  const classes = useStyles()\n  const cycles = cycleHistory ? [cycleHistory.currentCycle, ...cycleHistory.pastCycles] : []\n  return (\n    <div className={classes.root}>\n      <CycleAdd onAdd={onAdd} />\n      <List className={classes.list}>\n        {cycles.map((cycle) => {\n          return (\n            <ListItem key={cycle.id}>\n              <ListItemText>{f(cycle.startDate)}</ListItemText>\n              <ListItemSecondaryAction>\n                <IconButton edge={'end'} aria-label={'delete'} onClick={() => onDelete(cycle.id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n}\n","import React from 'react'\nimport { CycleData as CycleDataComponent } from '../components/CycleData'\nimport { useTypedSelector } from '../../store'\nimport { CycleHistory } from '../model'\nimport { useDispatch } from 'react-redux'\nimport { addStartDate, deleteStartDate, LoginState, CycleId } from '../../db'\n\ninterface Props {\n  readonly loginState: LoginState\n}\n\nexport const CycleData = ({ loginState }: Props) => {\n  const cycleHistory = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\n  const dispatch = useDispatch()\n  const onAdd = (date: number) => dispatch(addStartDate(date, loginState))\n  const onDelete = (id: CycleId) => dispatch(deleteStartDate(id, loginState))\n  return <CycleDataComponent cycleHistory={cycleHistory} onAdd={onAdd} onDelete={onDelete} />\n}\n","import React, { useState } from 'react'\nimport { Button, CircularProgress, TextField, Theme } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { LoginFormState } from '../model'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    display: 'grid',\n    gridTemplateRows: 'auto auto auto',\n    gridRowGap: theme.spacing(2),\n  },\n  button: {\n    minHeight: 24,\n  },\n}))\n\ninterface Props {\n  state: LoginFormState\n  onSubmit: (appId: string, username: string, password: string) => void\n}\n\nexport const LoginForm = ({ state, onSubmit }: Props) => {\n  const classes = useStyles()\n\n  const [appId, setAppId] = useState<string>(process.env.REACT_APP_USERBASE_APP_ID ?? '')\n  const [username, setUsername] = useState<string>(process.env.REACT_APP_USERBASE_USERNAME ?? '')\n  const [password, setPassword] = useState<string>(process.env.REACT_APP_USERBASE_PASSWORD ?? '')\n  const isSubmitted = state.type === 'login-form-submitted'\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    onSubmit(appId, username, password)\n  }\n\n  const isInvalidCredentials = state.type === 'login-form-error' && state.field === 'credentials'\n\n  return (\n    <form className={classes.root} noValidate={true} autoComplete=\"off\" onSubmit={handleSubmit}>\n      <TextField\n        id=\"appId\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"App Id\"\n        type={'password'}\n        value={appId}\n        onChange={(event) => setAppId(event.target.value)}\n        disabled={isSubmitted}\n        error={state.type === 'login-form-error' && state.field === 'appId'}\n      />\n      <TextField\n        id=\"username\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"Username\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        disabled={isSubmitted}\n        error={isInvalidCredentials}\n      />\n      <TextField\n        id=\"password\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"Password\"\n        type={'password'}\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        disabled={isSubmitted}\n        error={isInvalidCredentials}\n      />\n      <Button\n        className={classes.button}\n        disabled={\n          isSubmitted || appId.trim().length === 0 || username.trim().length === 0 || password.trim().length === 0\n        }\n        type=\"submit\"\n        variant={'contained'}\n        color=\"primary\"\n      >\n        {isSubmitted ? <CircularProgress size={20} /> : 'Log In'}\n      </Button>\n    </form>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { LoginForm as LoginFormComponent } from '../components/LoginForm'\nimport { useDispatch } from 'react-redux'\nimport { loginFormError, loginFormSubmitted, loginSuccessful } from '../actions'\nimport { LoginFormState } from '../model'\nimport { userbase, UserResult } from '../userbase'\n\ninterface Props {\n  readonly state: LoginFormState\n}\n\nexport const LoginForm = ({ state }: Props) => {\n  const [appId, setAppId] = useState<string>()\n  const [isDbInitialized, setDbInitialized] = useState<boolean>(false)\n  const [credentials, setCredentials] = useState<[string, string]>()\n\n  const dispatch = useDispatch()\n\n  const onSubmit = (appId: string, username: string, password: string) => {\n    setAppId(appId)\n    setCredentials([username, password])\n    dispatch(loginFormSubmitted())\n  }\n\n  useEffect(() => {\n    if (appId && !isDbInitialized) {\n      console.debug('Initializing DB...')\n      userbase\n        .init({ appId })\n        .then(() => {\n          console.debug('DB init successful')\n          setDbInitialized(true)\n        })\n        .catch((error) => {\n          console.debug('DB init failed: ' + error)\n          setDbInitialized(false)\n          dispatch(loginFormError('Invalid App Id', 'appId'))\n        })\n    }\n  }, [appId, isDbInitialized, setDbInitialized, dispatch])\n\n  useEffect(() => {\n    if (isDbInitialized && credentials) {\n      // Prevent already signed-in\n      userbase.signOut().catch(() => {\n        /* Ignore not-yet-signed-in */\n      })\n      const [username, password] = credentials\n      console.debug('DB sign-in...')\n      userbase\n        .signIn({\n          username,\n          password,\n        })\n        .then((user: UserResult) => {\n          console.debug('DB sign-in successful')\n          return dispatch(loginSuccessful(user))\n        })\n        .catch((e: string) => {\n          console.debug('DB sign-in failed: ' + e)\n          if (e.toString().startsWith('AppIdNotValid')) {\n            dispatch(loginFormError('Invalid App Id', 'appId'))\n          } else {\n            dispatch(loginFormError('Invalid Credentials', 'credentials'))\n          }\n        })\n    }\n  }, [isDbInitialized, credentials, dispatch])\n\n  return <LoginFormComponent state={state} onSubmit={onSubmit} />\n}\n","import * as React from 'react'\nimport SaveIcon from '@material-ui/icons/SaveAlt'\nimport { IconButton } from '@material-ui/core'\n\ninterface Props {\n  onClick: () => void\n}\n\nexport const ExportCycleData = ({ onClick }: Props) => (\n  <IconButton color=\"inherit\" onClick={onClick}>\n    <SaveIcon />\n  </IconButton>\n)\n","import * as React from 'react'\nimport { ExportCycleData as ExportCycleDataComponent } from '../components/ExportCycleData'\nimport { useTypedDispatch, useTypedSelector } from '../../store'\nimport { exportCycleData } from '../actions'\nimport { CycleIOData, CycleState } from '../model'\nimport { f } from '../utils'\n\nconst exportableData = (cycleState: CycleState): CycleIOData => {\n  const history = cycleState.history\n  const allCycles = history ? [history.currentCycle, ...history.pastCycles] : []\n  return {\n    history: {\n      startDates: allCycles.map((c) => f(c.startDate)),\n    },\n  }\n}\n\nexport const ExportCycleData = () => {\n  const cycleState = useTypedSelector<CycleState>((s) => s.cycle)\n  const dispatch = useTypedDispatch()\n  const onClick = () => {\n    const data = exportableData(cycleState)\n    dispatch(exportCycleData(data))\n  }\n  return <ExportCycleDataComponent onClick={onClick} />\n}\n","export * from './model'\nexport * from './store'\nexport * from './useTypedSelector'\nexport * from './useTypedDispatch'\n","import userbaseDB, { DatabaseChangeHandler, Item, Session, Userbase, UserResult } from 'userbase-js'\nimport { parse } from 'date-fns'\nimport { DATE_FORMAT_IMPORT_EXPORT } from '../cycle/utils'\n\nexport type { Item, UserResult } from 'userbase-js'\n\ntype UserbaseProxy = Pick<Userbase, 'init' | 'signIn' | 'signOut' | 'openDatabase' | 'insertItem' | 'deleteItem'>\n\nexport const demoUser: UserResult = {\n  username: 'demo-User',\n  userId: 'demo-user-id',\n  authToken: 'demo-authToken',\n  creationDate: new Date(),\n  paymentsMode: 'test',\n}\n\nclass DemoUserbase implements UserbaseProxy {\n  private changeHandler?: DatabaseChangeHandler\n  private items: ReadonlyArray<Item> = []\n\n  constructor(items: ReadonlyArray<Item>) {\n    this.items = items\n  }\n\n  init(): Promise<Session> {\n    return Promise.resolve({})\n  }\n\n  signIn(): Promise<UserResult> {\n    return Promise.resolve(demoUser)\n  }\n\n  signOut(): Promise<void> {\n    return Promise.resolve()\n  }\n\n  openDatabase(params: {\n    databaseName?: string\n    databaseId?: string\n    changeHandler: DatabaseChangeHandler\n  }): Promise<void> {\n    this.changeHandler = params.changeHandler\n    this.changeHandler([...this.items])\n    return Promise.resolve()\n  }\n\n  insertItem(params: { databaseName?: string; databaseId?: string; item: Item; itemId?: string }): Promise<void> {\n    if (this.items.find((i) => i.itemId === params.itemId)) {\n      // TODO: Reject duplicates (https://github.com/twenty-eight-days/twenty-eight-days/issues/23)\n      return Promise.resolve()\n    } else {\n      const newItems = [\n        ...this.items,\n        {\n          itemId: params.itemId ?? params.item.toString(),\n          item: params.item,\n        },\n      ]\n\n      if (this.changeHandler) {\n        this.changeHandler(newItems)\n      }\n      this.items = newItems\n      return Promise.resolve()\n    }\n  }\n\n  deleteItem(params: { databaseName?: string; databaseId?: string; itemId: string }): Promise<void> {\n    const newItems = this.items.filter((i) => i.itemId !== params.itemId)\n    if (this.changeHandler) {\n      this.changeHandler(newItems)\n    }\n    this.items = newItems\n    return Promise.resolve()\n  }\n}\n\nconst query = new URLSearchParams(window.location.search)\nexport const isDemoMode = query.has('demo')\n\nconst demoData = [\n  '05.01.2021',\n  '01.12.2020',\n  '12.11.2020',\n  '09.10.2020',\n  '07.09.2020',\n  '10.08.2020',\n  '11.07.2020',\n  '11.06.2020',\n  '05.05.2020',\n  '06.04.2020',\n  '01.03.2020',\n  '10.02.2020',\n  '15.01.2020',\n  '18.12.2019',\n  '20.11.2019',\n  '22.10.2019',\n]\n\nexport const userbase: UserbaseProxy = isDemoMode\n  ? new DemoUserbase(\n      demoData\n        .map<number>((d) => parse(d, DATE_FORMAT_IMPORT_EXPORT, new Date()).valueOf())\n        .sort((d1, d2) => d2 - d1)\n        .map<Item>((startDate: number) => {\n          return {\n            itemId: `${startDate}`,\n            item: startDate,\n          }\n        })\n    )\n  : userbaseDB\n","export * from './model'\nexport * from './default'\nexport * from './actions'\nexport * from './reducer'\nexport * from './containers/DataProvider'\nexport * from './containers/LoginForm'\nexport { isDemoMode } from './userbase'\n","import { AuthState, LoginForm } from '../../db'\nimport { CycleData, CycleStats } from '../../cycle'\nimport React, { useState } from 'react'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport StatsIcon from '@material-ui/icons/TrendingUp'\nimport DataIcon from '@material-ui/icons/Event'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles({\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n  },\n})\n\ntype Tab = 'stats' | 'data'\n\ninterface Props {\n  readonly authState: AuthState\n}\n\nexport const Main = ({ authState }: Props) => {\n  const classes = useStyles()\n  const [navTab, setNavTab] = useState<Tab>('stats')\n\n  switch (authState.type) {\n    case 'login-form':\n      return <LoginForm state={authState.state} />\n    case 'logged-in':\n      return (\n        <div>\n          {navTab === 'stats' && <CycleStats />}\n          {navTab === 'data' && <CycleData loginState={authState} />}\n          <BottomNavigation\n            className={classes.bottomNav}\n            value={navTab}\n            onChange={(event, newValue) => {\n              setNavTab(newValue)\n            }}\n            showLabels={true}\n          >\n            <BottomNavigationAction label=\"Stats\" icon={<StatsIcon />} value={'stats'} />\n            <BottomNavigationAction label=\"Data\" icon={<DataIcon />} value={'data'} />\n          </BottomNavigation>\n        </div>\n      )\n    default:\n      return <div />\n  }\n}\n","import React from 'react'\nimport { Main as MainComponent } from '../components/Main'\nimport { useTypedSelector } from '../../store'\nimport { AuthState } from '../../db'\n\nexport const Main = () => {\n  const authState = useTypedSelector<AuthState>((s) => s.database.authState)\n  return <MainComponent authState={authState} />\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { ThemeSwitch } from '../../theme'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { ExportCycleData } from '../../cycle'\nimport { Theme, Typography } from '@material-ui/core'\nimport { Main } from '../containers/Main'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    height: 64, // fix vertical toolbar item offset in safari\n  },\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto', // center is position 'absolute'\n  },\n  toolbarLeft: {\n    height: '100%',\n    marginRight: 'auto', // push to the left\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    alignItems: 'center',\n  },\n  toolbarCenter: {\n    // position centered on page (rather than in flow of toolbar items)\n    position: 'absolute',\n    width: '100%',\n    display: 'grid',\n    pointerEvents: 'none',\n    [theme.breakpoints.down('sm')]: {\n      visibility: 'hidden',\n    },\n  },\n  title: {\n    justifySelf: 'center',\n    color: theme.palette.primary.contrastText,\n  },\n  toolbarRight: {\n    height: '100%',\n    marginLeft: 'auto', // push to the right\n    display: 'grid',\n    gridTemplateColumns: 'auto',\n    alignItems: 'center',\n  },\n  main: {\n    display: 'grid',\n    width: '100vw',\n    gridTemplateRows: 'auto 1fr auto',\n    gridRowGap: 8,\n    paddingTop: 100,\n    paddingBottom: 100,\n    paddingLeft: '20vw',\n    paddingRight: '20vw',\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '5vw',\n      paddingRight: '5vw',\n    },\n  },\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n  },\n}))\n\nexport const App = () => {\n  const classes = useStyles()\n\n  return (\n    <div className=\"App\">\n      <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.toolbarLeft}>\n            <ExportCycleData />\n          </div>\n          <div className={classes.toolbarCenter}>\n            <Typography\n              className={classes.title}\n              variant=\"h6\"\n            >{`${process.env.REACT_APP_NAME} v${process.env.REACT_APP_VERSION}`}</Typography>\n          </div>\n          <div className={classes.toolbarRight}>\n            <ThemeSwitch />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.main}>\n        <Main />\n      </div>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider, Theme } from '@material-ui/core'\nimport { useTypedSelector } from '../../store'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  const theme = useTypedSelector<Theme>((s) => s.theme)\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport { configureStore } from './store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { DataProvider } from './db'\n\nconst store = configureStore()\n\nconst Root = () => (\n  <Provider store={store}>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nserviceWorker.register()\n","export * from './actions'\nexport * from './reducer'\nexport * from './model'\nexport * from './default'\nexport * from './containers/CycleStats'\nexport * from './containers/CycleData'\nexport * from './containers/ExportCycleData'\n","import format from 'date-fns/format'\nimport enLocale from 'date-fns/locale/en-US'\n\nexport const DATE_FORMAT_IMPORT_EXPORT = 'dd.MM.yyyy'\nconst DATE_FORMAT_WITH_WEEKDAY = 'EEEE, MMMM dd'\nconst DATE_FORMAT_WITHOUT_WEEKDAY = 'MMMM dd'\n\nexport const f = (date: number) => format(date, DATE_FORMAT_IMPORT_EXPORT)\n\nconst options = { locale: enLocale }\n\nexport const dateWithWeekDay = (date: number) => format(date, DATE_FORMAT_WITH_WEEKDAY, options)\nexport const dateWithoutWeekDay = (date: number) => format(date, DATE_FORMAT_WITHOUT_WEEKDAY, options)\n","import { UPDATE_AUTH_STATE } from './actionTypes'\nimport { AuthState, LoginState, LoginFormState, CycleId, LoginFormField } from './model'\nimport { userbase, UserResult } from './userbase'\n\nexport type DatabaseAction = UpdateAuthStateAction\n\ninterface UpdateAuthStateAction {\n  type: typeof UPDATE_AUTH_STATE\n  authState: AuthState\n}\n\nconst updateAuthState = (authState: AuthState): UpdateAuthStateAction => ({\n  type: UPDATE_AUTH_STATE,\n  authState,\n})\n\nconst updateLoginForm = (state: LoginFormState) =>\n  updateAuthState({\n    type: 'login-form',\n    state,\n  })\n\nexport const loginFormSubmitted = () => updateLoginForm({ type: 'login-form-submitted' })\nexport const loginFormError = (error: string, field: LoginFormField) =>\n  updateLoginForm({ type: 'login-form-error', field, error })\n\nexport const loginSuccessful = (user: UserResult) =>\n  updateAuthState({\n    type: 'logged-in',\n    user,\n  })\n\nexport const cycleDatabaseName = (loginState: LoginState) => `${loginState.user.username}-cycles-v1`\n\nexport const addStartDate = (date: number, loginState: LoginState) => async () => {\n  const databaseName = cycleDatabaseName(loginState)\n  return userbase\n    .insertItem({\n      databaseName,\n      itemId: `${date}`,\n      item: date,\n    })\n    .then(() => console.log('DB insertItem successful'))\n    .catch((e) => {\n      console.error('DB insertItem failed ' + e)\n    })\n}\n\nexport const deleteStartDate = (id: CycleId, loginState: LoginState) => async () => {\n  const databaseName = cycleDatabaseName(loginState)\n  return userbase\n    .deleteItem({\n      databaseName,\n      itemId: id,\n    })\n    .then(() => console.log('DB deleteItem successful'))\n    .catch((e) => {\n      console.error('DB deleteItem failed ' + e)\n    })\n}\n"],"sourceRoot":""}