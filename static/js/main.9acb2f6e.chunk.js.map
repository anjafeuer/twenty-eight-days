{"version":3,"sources":["theme/actions.ts","theme/model.ts","theme/defaults.ts","theme/components/ThemeSwitch.tsx","theme/containers/ThemeSwitch.tsx","theme/reducer.ts","cycle/actions.ts","cycle/actionTypes.ts","db/actionTypes.ts","cycle/reducer.ts","cycle/default.ts","db/model.ts","db/default.ts","db/reducer.ts","db/containers/DataProvider.tsx","store/useTypedSelector.ts","store/useTypedDispatch.ts","cycle/components/CycleDescription.tsx","cycle/components/shared.ts","cycle/components/CycleDurationHistogram.tsx","cycle/components/CycleBarChart.tsx","cycle/components/CycleStats.tsx","cycle/components/NotEnoughData.tsx","cycle/containers/CycleStats.tsx","store/default.ts","store/reducer.ts","store/store.ts","cycle/components/CycleAdd.tsx","cycle/components/CycleData.tsx","cycle/containers/CycleData.tsx","db/components/LoginForm.tsx","db/containers/LoginForm.tsx","cycle/components/ExportCycleData.tsx","cycle/containers/ExportCycleData.tsx","store/index.ts","db/userbase.ts","db/actions.ts","db/index.ts","app/components/Main.tsx","app/containers/Main.tsx","app/components/App.tsx","app/containers/App.tsx","serviceWorker.ts","index.tsx","cycle/index.ts","cycle/utils.ts"],"names":["toggleTheme","type","lightTheme","createMuiTheme","palette","darkTheme","defaultThemeState","useStyles","makeStyles","root","display","gridTemplateColumns","alignItems","icon","margin","ThemeSwitch","theme","onToggleTheme","classes","className","Switch","checked","onChange","color","useTypedSelector","s","dispatch","useTypedDispatch","themeReducer","state","action","updateCycles","cycles","UPDATE_CYCLES","exportCycleData","data","blob","Blob","JSON","stringify","today","format","Date","valueOf","FileSaver","saveAs","UPDATE_AUTH_STATE","cycleReducer","length","history","rawCycles","latestRawCycle","currentCycle","id","startDate","duration","differenceInDays","startOfToday","pastCycles","flatMap","rawCycle","index","from","to","Math","abs","cycleHistory","sort","a","b","compareDesc","defaultCycleState","CycleIdBrand","defaultDatabaseState","authState","demoDatabaseState","user","demoUser","dbReducer","DataProvider","children","loginState","database","useDispatch","useEffect","databaseName","cycleDatabaseName","console","log","userbase","openDatabase","changeHandler","items","startDates","map","i","itemId","item","then","catch","err","useSelector","userName","textTransform","CycleDescription","currentDay","median","lastStartDate","expectedStartDate","addDays","expectedStart","isBefore","dateWithWeekDay","Typography","variant","align","dateWithoutWeekDay","fd","date","width","height","justifyItems","bar","fill","lighten","primary","main","strokeWidth","stroke","background","default","dot","secondary","line","text","textAnchor","fontSize","dominantBaseline","CycleDurationHistogram","cycleDurations","c","binMin","min","binMax","max","x","scaleLinear","domain","range","bins","histogram","thresholds","ticks","y","d","nice","binWidth","currentDayBin","undefined","medianX","viewBox","x1","x2","y1","marginTop","y2","marginBottom","h","key","x0","cx","cy","r","label","CycleBarChart","barWidth","useTheme","reverse","toAxisLabel","currentDuration","pastDuration","medianMarker","axis","value","lineStyle","keys","colors","layout","padding","enableGridY","isInteractive","layers","labels","bars","barDatum","transform","top","right","bottom","left","textColor","markers","endDate","gridGap","spacing","CycleStats","useDividerStyles","container","border","borderBottom","content","paddingTop","paddingBottom","paddingRight","paddingLeft","fontWeight","whiteSpace","Divider","NotEnoughData","useState","setToday","useInterval","cycle","username","values","mid","floor","nums","daysPast","day","defaultRootState","isDemoMode","rootReducer","configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","actions","CycleAdd","onAdd","selectedDate","handleDateChange","isValid","setValid","Card","CardContent","dateAdapter","DateFnsAdapter","locale","deLocale","onError","e","renderInput","props","TextField","mask","disableFuture","showTodayButton","autoOk","CardActions","Button","disabled","onClick","list","CycleData","onDelete","List","ListItem","ListItemText","f","ListItemSecondaryAction","IconButton","edge","aria-label","addStartDate","deleteStartDate","gridTemplateRows","gridRowGap","button","minHeight","LoginForm","isSignUp","onSubmit","process","REACT_APP_USERBASE_APP_ID","appId","setAppId","REACT_APP_USERBASE_USERNAME","setUsername","REACT_APP_USERBASE_PASSWORD","password","setPassword","isSubmitted","isInvalidCredentials","field","noValidate","autoComplete","preventDefault","fullWidth","event","target","error","trim","CircularProgress","size","URLSearchParams","window","location","search","has","isDbInitialized","setDbInitialized","credentials","setCredentials","debug","init","loginFormError","signOut","signUp","signIn","loginFormSubmitted","ExportCycleData","cycleState","exportableData","userId","authToken","creationDate","paymentsMode","DemoUserbase","this","Promise","resolve","params","find","newItems","toString","filter","p","demoDateString","parse","DATE_FORMAT_IMPORT_EXPORT","demoDataCreationDate","daysToAdd","parsedDate","d1","d2","userbaseDB","loginSuccessful","startsWith","updateAuthState","updateLoginForm","insertItem","deleteItem","bottomNav","position","Main","navTab","setNavTab","BottomNavigation","newValue","showLabels","BottomNavigationAction","appBar","toolbar","toolbarLeft","marginRight","toolbarCenter","pointerEvents","breakpoints","down","visibility","title","justifySelf","contrastText","toolbarRight","marginLeft","App","AppBar","Toolbar","ThemeProvider","CssBaseline","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","options","enLocale"],"mappings":"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","file":"static/js/main.9acb2f6e.chunk.js","sourcesContent":["export const TOGGLE_THEME = 'theme/TOGGLE_THEME'\r\n\r\nexport type ThemeAction = ToggleThemeAction\r\n\r\nexport interface ToggleThemeAction {\r\n  readonly type: typeof TOGGLE_THEME\r\n}\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => {\r\n  return {\r\n    type: TOGGLE_THEME\r\n  }\r\n}\r\n","import { createMuiTheme, Theme } from '@material-ui/core'\r\n\r\nexport type ThemeState = Theme\r\n\r\nexport const lightTheme: Theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light'\r\n  }\r\n})\r\n\r\nexport const darkTheme: Theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark'\r\n  }\r\n})\r\n","import { Theme } from '@material-ui/core'\r\nimport { lightTheme } from './model'\r\n\r\nexport const defaultThemeState: Theme = lightTheme\r\n","import DarkThemeIcon from '@material-ui/icons/Brightness2'\r\nimport LightThemeIcon from '@material-ui/icons/WbSunny'\r\nimport * as React from 'react'\r\nimport { Switch, Theme } from '@material-ui/core'\r\nimport { darkTheme } from '../model'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto 1fr auto',\r\n    alignItems: 'center'\r\n  },\r\n  icon: {\r\n    margin: 4\r\n  }\r\n})\r\n\r\nexport interface Props {\r\n  readonly theme: Theme\r\n  readonly onToggleTheme: () => void\r\n}\r\n\r\nexport const ThemeSwitch = ({ theme, onToggleTheme }: Props) => {\r\n  const classes = useStyles(theme)\r\n  return (\r\n    <div className={classes.root}>\r\n      <LightThemeIcon className={classes.icon} />\r\n      <Switch checked={theme === darkTheme} onChange={onToggleTheme} color={'default'} />\r\n      <DarkThemeIcon className={classes.icon} />\r\n    </div>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { ThemeSwitch as ThemeSwitchComp } from '../components/ThemeSwitch'\r\nimport { ThemeAction, toggleTheme } from '../index'\r\nimport { useTypedDispatch, useTypedSelector } from '../../store'\r\nimport { Theme } from '@material-ui/core'\r\n\r\nexport const ThemeSwitch = () => {\r\n  const theme = useTypedSelector<Theme>((s) => s.theme)\r\n  const dispatch = useTypedDispatch<ThemeAction>()\r\n  const onToggleTheme = () => dispatch(toggleTheme())\r\n  return <ThemeSwitchComp theme={theme} onToggleTheme={onToggleTheme} />\r\n}\r\n","import { ThemeAction, TOGGLE_THEME } from './actions'\r\nimport { darkTheme, lightTheme, ThemeState } from './model'\r\n\r\nexport const themeReducer = (state: ThemeState, action: ThemeAction): ThemeState => {\r\n  if (action.type === TOGGLE_THEME) {\r\n    return state.palette.type === 'light' ? darkTheme : lightTheme\r\n  } else {\r\n    return state\r\n  }\r\n}\r\n","import FileSaver from 'file-saver'\r\nimport { CycleIOData, RawCycle } from './model'\r\nimport { UPDATE_CYCLES } from './actionTypes'\r\nimport format from 'date-fns/format'\r\n\r\nexport type CycleAction = UpdateCyclesAction\r\n\r\ninterface UpdateCyclesAction {\r\n  type: typeof UPDATE_CYCLES\r\n  cycles: ReadonlyArray<RawCycle>\r\n}\r\n\r\nexport const updateCycles = (cycles: ReadonlyArray<RawCycle>): UpdateCyclesAction => ({\r\n  type: UPDATE_CYCLES,\r\n  cycles,\r\n})\r\n\r\nexport const exportCycleData = (data: CycleIOData) => () => {\r\n  const blob = new Blob([JSON.stringify(data)], { type: 'text/json;charset=utf-8' })\r\n  const today = format(new Date().valueOf(), 'yyyyMMdd')\r\n  FileSaver.saveAs(blob, `cycle-data-${today}.json`)\r\n}\r\n","export const UPDATE_CYCLES = 'cycle/UPDATE_CYCLES'\r\n","export const UPDATE_AUTH_STATE = 'db/UPDATE_AUTH_STATE'\r\n","import { CycleHistory, CycleState, PastCycle, RawCycle } from './model'\r\nimport { CycleAction } from './actions'\r\nimport { UPDATE_CYCLES } from './actionTypes'\r\nimport differenceInDays from 'date-fns/differenceInDays'\r\nimport startOfToday from 'date-fns/startOfToday'\r\nimport { compareDesc } from 'date-fns'\r\n\r\nexport const cycleReducer = (state: CycleState, action: CycleAction): CycleState => {\r\n  switch (action.type) {\r\n    case UPDATE_CYCLES: {\r\n      if (action.cycles.length > 0) {\r\n        const startDates = [...action.cycles].sort((a, b) => compareDesc(a.startDate, b.startDate))\r\n        const history = cycleHistory(startDates)\r\n        return {\r\n          ...state,\r\n          history,\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function cycleHistory(rawCycles: ReadonlyArray<RawCycle>): CycleHistory {\r\n  const latestRawCycle = rawCycles[0]\r\n  return {\r\n    currentCycle: {\r\n      id: latestRawCycle.id,\r\n      startDate: latestRawCycle.startDate,\r\n      duration: differenceInDays(startOfToday(), latestRawCycle.startDate),\r\n      type: 'current',\r\n    },\r\n    pastCycles: rawCycles.flatMap<PastCycle>((rawCycle, index, rawCycles) => {\r\n      if (index > 0) {\r\n        const from = rawCycles[index - 1].startDate\r\n        const to = rawCycle.startDate\r\n        const duration = Math.abs(differenceInDays(from, to))\r\n        return [\r\n          {\r\n            ...rawCycle,\r\n            type: 'past',\r\n            duration,\r\n          },\r\n        ]\r\n      } else {\r\n        return []\r\n      }\r\n    }),\r\n  }\r\n}\r\n","import { CycleState } from './model'\r\n\r\nexport const defaultCycleState: CycleState = {}\r\n","import { UserResult } from 'userbase-js'\r\n\r\n/* ·················································································································· */\r\n/*  Redux State\r\n/* ·················································································································· */\r\n\r\nexport interface DatabaseState {\r\n  readonly authState: AuthState\r\n}\r\n\r\nexport type AuthState = DisplayLoginForm | DbInitInProgress | DbInitFailed | LoginState\r\n\r\nexport interface DisplayLoginForm {\r\n  type: 'login-form'\r\n  state: LoginFormState\r\n}\r\n\r\nexport type LoginFormState = LoginFormIdle | LoginFormSubmitted | LoginFormError\r\n\r\nexport interface LoginFormIdle {\r\n  type: 'login-form-idle'\r\n}\r\n\r\nexport interface LoginFormSubmitted {\r\n  type: 'login-form-submitted'\r\n}\r\n\r\nexport type LoginFormField = 'appId' | 'credentials'\r\n\r\nexport interface LoginFormError {\r\n  type: 'login-form-error'\r\n  field: LoginFormField\r\n  error: string\r\n}\r\n\r\nexport interface LoginState {\r\n  type: 'logged-in'\r\n  user: UserResult\r\n}\r\n\r\nexport interface DbInitInProgress {\r\n  type: 'db-init-in-progress'\r\n}\r\n\r\nexport interface DbInitFailed {\r\n  type: 'db-init-failed'\r\n  error: any\r\n}\r\n\r\n/* ·················································································································· */\r\n/*  Userbase IDs\r\n/* ·················································································································· */\r\n\r\nenum CycleIdBrand {}\r\n\r\nexport type CycleId = CycleIdBrand & string\r\n","import { DatabaseState } from './model'\r\nimport { demoUser } from './userbase'\r\n\r\nexport const defaultDatabaseState: DatabaseState = {\r\n  authState: {\r\n    type: 'login-form',\r\n    state: {\r\n      type: 'login-form-idle',\r\n    },\r\n  },\r\n}\r\n\r\nexport const demoDatabaseState: DatabaseState = {\r\n  authState: {\r\n    type: 'logged-in',\r\n    user: demoUser,\r\n  },\r\n}\r\n","import { DatabaseState } from './model'\r\nimport { DatabaseAction } from './actions'\r\nimport { UPDATE_AUTH_STATE } from './actionTypes'\r\n\r\nexport const dbReducer = (state: DatabaseState, action: DatabaseAction): DatabaseState => {\r\n  switch (action.type) {\r\n    case UPDATE_AUTH_STATE:\r\n      return {\r\n        ...state,\r\n        authState: action.authState,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ReactElement, useEffect } from 'react'\r\nimport { useTypedSelector } from '../../store'\r\nimport { useDispatch } from 'react-redux'\r\nimport { RawCycle, updateCycles } from '../../cycle'\r\nimport { cycleDatabaseName } from '../actions'\r\nimport { CycleId } from '../model'\r\nimport { userbase, Item } from '../userbase'\r\n\r\ninterface Props {\r\n  children: ReactElement\r\n}\r\n\r\nexport const DataProvider = ({ children }: Props) => {\r\n  const loginState = useTypedSelector((s) => s.database.authState)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (loginState.type === 'logged-in') {\r\n      const databaseName = cycleDatabaseName(loginState)\r\n      console.log(`DB openDatabase ${databaseName} ...`)\r\n      userbase\r\n        .openDatabase({\r\n          databaseName,\r\n          changeHandler: (items: ReadonlyArray<Item>) => {\r\n            const startDates = items.map<RawCycle>((i) => ({\r\n              id: i.itemId as CycleId,\r\n              startDate: i.item,\r\n            }))\r\n            dispatch(updateCycles(startDates))\r\n          },\r\n        })\r\n        .then(() => {\r\n          console.log(`DB openDatabase ${databaseName} successful`)\r\n        })\r\n        .catch((err) => console.log(`DB openDatabase ${databaseName} failed ${err}`))\r\n    }\r\n  }, [loginState, dispatch])\r\n\r\n  return children\r\n}\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\r\nimport { RootState } from './model'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import { useDispatch } from 'react-redux'\r\nimport { RootAction } from './actions'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { RootState } from './model'\r\n\r\nexport const useTypedDispatch = <A extends RootAction>() => useDispatch<ThunkDispatch<RootState, {}, A>>()\r\n","import * as React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport { dateWithoutWeekDay, dateWithWeekDay } from '../utils'\r\nimport addDays from 'date-fns/addDays'\r\nimport { isBefore } from 'date-fns'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  userName: {\r\n    textTransform: 'capitalize',\r\n  },\r\n})\r\n\r\ninterface Props {\r\n  readonly userName: string\r\n  readonly currentDay: number\r\n  readonly median: number\r\n  readonly lastStartDate: number\r\n}\r\n\r\nexport const CycleDescription = ({ userName, currentDay, median, lastStartDate }: Props) => {\r\n  const classes = useStyles()\r\n  const expectedStartDate = addDays(lastStartDate, median - 1).valueOf()\r\n  const expectedStart = isBefore(expectedStartDate, new Date()) ? (\r\n    <b>{'today'}</b>\r\n  ) : (\r\n    <div>\r\n      {'on '}\r\n      <b>{dateWithWeekDay(expectedStartDate)}</b>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant={'body1'} align={'center'}>\r\n        Hey <span className={classes.userName}>{userName}</span> – today is {dateWithWeekDay(new Date().valueOf())}\r\n      </Typography>\r\n      <Typography variant={'h1'} align={'center'}>\r\n        {currentDay}\r\n      </Typography>\r\n      <Typography variant={'body1'} align={'center'}>\r\n        days since your last period, which started on {dateWithoutWeekDay(lastStartDate)}.\r\n      </Typography>\r\n      <br />\r\n      <Typography variant={'body1'} align={'center'}>\r\n        Your next period is expected {expectedStart}.\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n","import { format } from 'date-fns'\r\n\r\nexport const barLighteningCoefficient = 0.5\r\nexport const fd = (date: number | Date) => format(date, 'dd.MM.yyyy')\r\n","import React from 'react'\r\nimport { histogram, max, min } from 'd3-array'\r\nimport { scaleLinear } from 'd3-scale'\r\nimport { lighten, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { CycleHistory } from '../model'\r\nimport { barLighteningCoefficient } from './shared'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'grid',\r\n    width: '100%',\r\n    height: '100%',\r\n    justifyItems: 'center',\r\n  },\r\n  bar: {\r\n    fill: lighten(theme.palette.primary.main, barLighteningCoefficient),\r\n    strokeWidth: 1,\r\n    stroke: theme.palette.background.default,\r\n  },\r\n  dot: {\r\n    fill: theme.palette.secondary.main,\r\n  },\r\n  line: {\r\n    stroke: theme.palette.text.primary,\r\n    strokeWidth: 1,\r\n  },\r\n  text: {\r\n    fill: theme.palette.text.primary,\r\n    textAnchor: 'middle',\r\n    fontSize: 9,\r\n    dominantBaseline: 'central',\r\n  },\r\n}))\r\n\r\ninterface Props {\r\n  readonly width: number\r\n  readonly height: number\r\n  readonly currentDay: number\r\n  readonly median: number\r\n  readonly cycleHistory: CycleHistory\r\n}\r\n\r\nexport const CycleDurationHistogram = ({ width, height, currentDay, median, cycleHistory }: Props) => {\r\n  const classes = useStyles()\r\n\r\n  const marginTop = 10\r\n  const marginBottom = 20\r\n\r\n  const cycleDurations = cycleHistory.pastCycles.map((c) => c.duration)\r\n\r\n  const binMin = min(cycleDurations) ?? 20\r\n  const binMax = max(cycleDurations) ?? 35\r\n\r\n  const x = scaleLinear()\r\n    .domain([binMin, binMax + 1])\r\n    .range([0, width])\r\n  const bins = histogram().thresholds(x.ticks(binMax - binMin))(cycleDurations)\r\n\r\n  const y = scaleLinear()\r\n    .domain([0, max(bins, (d) => d.length) ?? 0])\r\n    .nice()\r\n    .range([height - marginBottom, marginTop])\r\n\r\n  const binWidth = width / bins.length\r\n  const currentDayBin = currentDay >= binMin ? bins[currentDay - binMin] : undefined\r\n\r\n  const medianX = x(median + 0.5)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\r\n        <line\r\n          className={classes.line}\r\n          x1={medianX}\r\n          x2={medianX}\r\n          y1={marginTop / 2}\r\n          y2={height - marginBottom / 2 - 5}\r\n        />\r\n        <text className={classes.text} x={medianX} y={height - marginBottom / 2}>\r\n          {median}\r\n        </text>\r\n        {bins.map((b, i) => {\r\n          const h = y(0) - y(b.length)\r\n          return (\r\n            <rect key={`bin-${i}`} className={classes.bar} x={x(b.x0!)} y={y(b.length)} width={binWidth} height={h} />\r\n          )\r\n        })}\r\n        {currentDayBin && (\r\n          <circle\r\n            className={classes.dot}\r\n            cx={x(currentDay + 0.5)}\r\n            cy={y(currentDayBin.length) - binWidth / 2}\r\n            r={binWidth / 3}\r\n            strokeWidth={0}\r\n          />\r\n        )}\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Cycle, CycleHistory } from '../model'\r\nimport { BarDatum, BarItemProps, ResponsiveBar } from '@nivo/bar'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport { barLighteningCoefficient, fd } from './shared'\r\nimport { Theme, useTheme } from '@material-ui/core'\r\nimport { addDays } from 'date-fns'\r\nimport { CartesianMarkerProps } from '@nivo/core'\r\n\r\ninterface CycleBarDatum {\r\n  readonly id: string\r\n  readonly currentDuration: number\r\n  readonly pastDuration: number\r\n}\r\n\r\nconst fontSize = 9\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: (height: number) => ({ width: '100%', height }),\r\n  label: {\r\n    fill: theme.palette.text.primary,\r\n    dominantBaseline: 'central',\r\n    fontSize,\r\n  },\r\n}))\r\n\r\nconst barWidth = 15\r\nconst barPadding = 0.2\r\nconst labelPadding = -12\r\n\r\ninterface Props {\r\n  readonly cycleHistory: CycleHistory\r\n  readonly median: number\r\n}\r\n\r\nexport const CycleBarChart = ({ cycleHistory, median }: Props) => {\r\n  const pastCycles = cycleHistory.pastCycles\r\n  const height = barWidth * (1 + barPadding) * pastCycles.length\r\n  const classes = useStyles(height)\r\n  const theme = useTheme()\r\n\r\n  const cycles = [cycleHistory.currentCycle, ...pastCycles].reverse().map<CycleBarDatum>((c) => ({\r\n    id: toAxisLabel(c),\r\n    currentDuration: c.type === 'current' ? c.duration + 1 : 0,\r\n    pastDuration: c.type === 'past' ? c.duration : 0,\r\n  }))\r\n\r\n  const currentCycleLabel = ({ bars }: { bars: BarItemProps[] }) => {\r\n    const labels = bars.map(({ data, x, y, width, height }) => {\r\n      const barDatum: BarDatum = data.data\r\n      return (\r\n        <text\r\n          className={classes.label}\r\n          key={`${data.id}/${data.index}`}\r\n          x={x}\r\n          y={y}\r\n          transform={`translate(${width + labelPadding},${height / 2})`}\r\n        >\r\n          {data.id === 'currentDuration' && data.index === cycles.length - 1 ? barDatum.currentDuration : ''}\r\n          {data.id === 'pastDuration' && data.index <= cycles.length ? barDatum.pastDuration : ''}\r\n        </text>\r\n      )\r\n    })\r\n    return <g>{labels}</g>\r\n  }\r\n\r\n  const medianMarker: CartesianMarkerProps = {\r\n    axis: 'x',\r\n    value: median,\r\n    lineStyle: { stroke: theme.palette.secondary.main, strokeWidth: 0.5 },\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ResponsiveBar\r\n        data={cycles}\r\n        keys={['currentDuration', 'pastDuration']}\r\n        colors={['lavender', lighten(theme.palette.primary.main, barLighteningCoefficient)]}\r\n        layout={'horizontal'}\r\n        padding={barPadding}\r\n        enableGridY={false}\r\n        isInteractive={false} // disable tooltips\r\n        layers={['markers', 'axes', 'bars', currentCycleLabel]}\r\n        margin={{ top: 0, right: 0, bottom: 0, left: 115 }}\r\n        label={() => ''} // disable default labels\r\n        theme={{ fontSize, textColor: theme.palette.text.primary }}\r\n        markers={[medianMarker]}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction toAxisLabel(c: Cycle) {\r\n  const startDate = fd(c.startDate)\r\n  switch (c.type) {\r\n    case 'past':\r\n      const endDate = fd(addDays(c.startDate, c.duration))\r\n      return `${startDate} - ${endDate}`\r\n    default:\r\n      return `${startDate} - __.__.____`\r\n  }\r\n}\r\n","import { CycleDescription } from './CycleDescription'\r\nimport * as React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { CycleHistory } from '../model'\r\nimport { CycleDurationHistogram } from './CycleDurationHistogram'\r\nimport { CycleBarChart } from './CycleBarChart'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'grid',\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyItems: 'center',\r\n    gridGap: theme.spacing(1),\r\n  },\r\n}))\r\n\r\ninterface Props {\r\n  readonly userName: string\r\n  readonly currentDay: number\r\n  readonly median: number\r\n  readonly lastStartDate: number\r\n  readonly cycleHistory: CycleHistory\r\n}\r\n\r\nexport const CycleStats = ({ userName, currentDay, median, lastStartDate, cycleHistory }: Props) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <CycleDescription userName={userName} currentDay={currentDay} median={median} lastStartDate={lastStartDate} />\r\n      <Divider text={'Past Cycles'} />\r\n      <Typography variant={'body1'} align={'center'}>\r\n        Your <b>median cycle</b> length is {median} days.\r\n      </Typography>\r\n      <CycleBarChart cycleHistory={cycleHistory} median={median} />\r\n      <Divider text={'Duration Histogram'} />\r\n      <CycleDurationHistogram\r\n        width={200}\r\n        height={150}\r\n        currentDay={currentDay}\r\n        median={median}\r\n        cycleHistory={cycleHistory}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n// https://stackoverflow.com/questions/61730527/react-create-a-horizontal-divider-with-text-in-between\r\n\r\nconst useDividerStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    marginTop: 12,\r\n  },\r\n  border: {\r\n    borderBottom: '2px solid lightgray',\r\n    width: '100%',\r\n  },\r\n  content: {\r\n    paddingTop: theme.spacing(0.5),\r\n    paddingBottom: theme.spacing(0.5),\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    fontWeight: 500,\r\n    fontSize: 22,\r\n    color: 'lightgray',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n}))\r\n\r\ninterface DividerProps {\r\n  readonly text: string\r\n}\r\n\r\nconst Divider = ({ text }: DividerProps) => {\r\n  const classes = useDividerStyles()\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.border} />\r\n      <span className={classes.content}>{text}</span>\r\n      <div className={classes.border} />\r\n    </div>\r\n  )\r\n}\r\n","import { Typography } from '@material-ui/core'\r\nimport * as React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'grid',\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'start',\r\n    justifyItems: 'center',\r\n  },\r\n})\r\n\r\nexport const NotEnoughData = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant={'body1'} align={'center'}>\r\n        {'Please add at least two cycle start dates (via '}\r\n        <i>{'Data'}</i>\r\n        {' tab)'}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n","import { CycleStats as CycleStatsComponent } from '../components/CycleStats'\r\nimport * as React from 'react'\r\nimport { useState } from 'react'\r\nimport useInterval from '@use-it/interval'\r\nimport { useTypedSelector } from '../../store'\r\nimport { CycleHistory } from '../model'\r\nimport startOfToday from 'date-fns/startOfToday'\r\nimport { differenceInDays } from 'date-fns'\r\nimport { NotEnoughData } from '../components/NotEnoughData'\r\n\r\nexport const medianCycleLength = (durations: ReadonlyArray<number>) => {\r\n  const median = (values: ReadonlyArray<number>) => {\r\n    const mid = Math.floor(values.length / 2),\r\n      nums = [...values].sort((a, b) => a - b)\r\n    return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\r\n  }\r\n  return median(durations)\r\n}\r\n\r\nexport const CycleStats = () => {\r\n  const [today, setToday] = useState<number>(startOfToday().valueOf())\r\n\r\n  useInterval(() => {\r\n    setToday(startOfToday().valueOf())\r\n  }, 1000 * 60)\r\n\r\n  const history = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\r\n  const userName = useTypedSelector<string>((s) => {\r\n    const authState = s.database.authState\r\n    return authState.type === 'logged-in' ? authState.user.username : ''\r\n  })\r\n  if (history && history.pastCycles.length > 0) {\r\n    const lastStartDate = history.currentCycle.startDate\r\n    const median = medianCycleLength(history.pastCycles.map((c) => c.duration))\r\n    const daysPast = differenceInDays(today, lastStartDate)\r\n    const day = Math.floor(daysPast) + 1 // start date is cycle day 1\r\n    return (\r\n      <CycleStatsComponent\r\n        userName={userName}\r\n        currentDay={day}\r\n        median={median}\r\n        lastStartDate={lastStartDate}\r\n        cycleHistory={history}\r\n      />\r\n    )\r\n  } else {\r\n    return <NotEnoughData />\r\n  }\r\n}\r\n","import { defaultThemeState } from '../theme'\r\nimport { RootState } from './model'\r\nimport { defaultCycleState } from '../cycle'\r\nimport { defaultDatabaseState, demoDatabaseState, isDemoMode } from '../db'\r\n\r\nexport const defaultRootState: RootState = {\r\n  database: isDemoMode ? demoDatabaseState : defaultDatabaseState,\r\n  theme: defaultThemeState,\r\n  cycle: defaultCycleState,\r\n}\r\n","import { ThemeAction, themeReducer } from '../theme'\r\nimport { RootAction } from './actions'\r\nimport { RootState } from './model'\r\nimport { defaultRootState } from './default'\r\nimport { cycleReducer } from '../cycle'\r\nimport { CycleAction } from '../cycle'\r\nimport { DatabaseAction, dbReducer } from '../db'\r\n\r\nexport const rootReducer = (state: RootState = defaultRootState, action: RootAction): RootState => ({\r\n  database: dbReducer(state.database, action as DatabaseAction),\r\n  theme: themeReducer(state.theme, action as ThemeAction),\r\n  cycle: cycleReducer(state.cycle, action as CycleAction),\r\n})\r\n","import { createStore, Store, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { rootReducer } from './reducer'\r\nimport { RootState } from './model'\r\nimport { RootAction } from './actions'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const configureStore = (): Store<RootState, RootAction> => {\r\n  return createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\r\nimport { Button, Card, CardActions, CardContent, TextField } from '@material-ui/core'\r\nimport DateFnsAdapter from '@material-ui/pickers/adapter/date-fns'\r\nimport deLocale from 'date-fns/locale/de'\r\nimport startOfToday from 'date-fns/startOfToday'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  content: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr',\r\n    width: '100%',\r\n  },\r\n  actions: {\r\n    display: 'grid',\r\n    justifyItems: 'end',\r\n  },\r\n})\r\n\r\ninterface Props {\r\n  readonly onAdd: (date: number) => void\r\n}\r\n\r\nexport const CycleAdd = ({ onAdd }: Props) => {\r\n  const classes = useStyles()\r\n  const [selectedDate, handleDateChange] = useState<number>(startOfToday().valueOf())\r\n  const [isValid, setValid] = useState<boolean>(true)\r\n\r\n  const onChange = (date: any) => date && handleDateChange((date as Date).valueOf())\r\n  const handleSubmit = () => onAdd(selectedDate)\r\n  const handleError = (e: any) => setValid(e === null)\r\n\r\n  return (\r\n    <Card className={classes.root} variant={'outlined'}>\r\n      <CardContent className={classes.content}>\r\n        <LocalizationProvider dateAdapter={DateFnsAdapter} locale={deLocale}>\r\n          <DatePicker\r\n            label=\"Cycle Start Date\"\r\n            value={selectedDate}\r\n            onChange={onChange}\r\n            onError={handleError}\r\n            renderInput={(props) => <TextField {...props} />}\r\n            mask={'__.__.____'}\r\n            disableFuture={true}\r\n            showTodayButton={true}\r\n            autoOk={true}\r\n          />\r\n        </LocalizationProvider>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Button variant={'contained'} color=\"primary\" disabled={!isValid} onClick={handleSubmit}>\r\n          Add\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CycleHistory } from '../model'\r\nimport { IconButton, List, ListItemSecondaryAction, ListItemText } from '@material-ui/core'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { CycleId } from '../../db'\r\nimport { CycleAdd } from './CycleAdd'\r\nimport { f } from '../utils'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'grid',\r\n    width: '100%',\r\n    justifyItems: 'center',\r\n  },\r\n  list: {\r\n    width: '100%',\r\n  },\r\n})\r\n\r\ninterface Props {\r\n  readonly cycleHistory?: CycleHistory\r\n  readonly onAdd: (date: number) => void\r\n  readonly onDelete: (id: CycleId) => void\r\n}\r\n\r\nexport const CycleData = ({ cycleHistory, onAdd, onDelete }: Props) => {\r\n  const classes = useStyles()\r\n  const cycles = cycleHistory ? [cycleHistory.currentCycle, ...cycleHistory.pastCycles] : []\r\n  return (\r\n    <div className={classes.root}>\r\n      <CycleAdd onAdd={onAdd} />\r\n      <List className={classes.list}>\r\n        {cycles.map((cycle) => {\r\n          return (\r\n            <ListItem key={cycle.id}>\r\n              <ListItemText>{f(cycle.startDate)}</ListItemText>\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge={'end'} aria-label={'delete'} onClick={() => onDelete(cycle.id)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          )\r\n        })}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CycleData as CycleDataComponent } from '../components/CycleData'\r\nimport { useTypedSelector } from '../../store'\r\nimport { CycleHistory } from '../model'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addStartDate, deleteStartDate, LoginState, CycleId } from '../../db'\r\n\r\ninterface Props {\r\n  readonly loginState: LoginState\r\n}\r\n\r\nexport const CycleData = ({ loginState }: Props) => {\r\n  const cycleHistory = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\r\n  const dispatch = useDispatch()\r\n  const onAdd = (date: number) => dispatch(addStartDate(date, loginState))\r\n  const onDelete = (id: CycleId) => dispatch(deleteStartDate(id, loginState))\r\n  return <CycleDataComponent cycleHistory={cycleHistory} onAdd={onAdd} onDelete={onDelete} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, CircularProgress, TextField, Theme } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { LoginFormState } from '../model'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'grid',\r\n    gridTemplateRows: 'auto auto auto',\r\n    gridRowGap: theme.spacing(2),\r\n  },\r\n  button: {\r\n    minHeight: 48,\r\n  },\r\n}))\r\n\r\ninterface Props {\r\n  readonly isSignUp: boolean\r\n  readonly state: LoginFormState\r\n  readonly onSubmit: (appId: string, username: string, password: string) => void\r\n}\r\n\r\nexport const LoginForm = ({ isSignUp, state, onSubmit }: Props) => {\r\n  const classes = useStyles()\r\n\r\n  const [appId, setAppId] = useState<string>(process.env.REACT_APP_USERBASE_APP_ID ?? '')\r\n  const [username, setUsername] = useState<string>(process.env.REACT_APP_USERBASE_USERNAME ?? '')\r\n  const [password, setPassword] = useState<string>(process.env.REACT_APP_USERBASE_PASSWORD ?? '')\r\n  const isSubmitted = state.type === 'login-form-submitted'\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    onSubmit(appId, username, password)\r\n  }\r\n\r\n  const isInvalidCredentials = state.type === 'login-form-error' && state.field === 'credentials'\r\n\r\n  return (\r\n    <form className={classes.root} noValidate={true} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      <TextField\r\n        id=\"appId\"\r\n        variant={'outlined'}\r\n        fullWidth={true}\r\n        label=\"App Id\"\r\n        type={'password'}\r\n        value={appId}\r\n        onChange={(event) => setAppId(event.target.value)}\r\n        disabled={isSubmitted}\r\n        error={state.type === 'login-form-error' && state.field === 'appId'}\r\n      />\r\n      <TextField\r\n        id=\"username\"\r\n        variant={'outlined'}\r\n        fullWidth={true}\r\n        label=\"Username\"\r\n        value={username}\r\n        onChange={(event) => setUsername(event.target.value)}\r\n        disabled={isSubmitted}\r\n        error={isInvalidCredentials}\r\n      />\r\n      <TextField\r\n        id=\"password\"\r\n        variant={'outlined'}\r\n        fullWidth={true}\r\n        label=\"Password\"\r\n        type={'password'}\r\n        value={password}\r\n        onChange={(event) => setPassword(event.target.value)}\r\n        disabled={isSubmitted}\r\n        error={isInvalidCredentials}\r\n      />\r\n      <Button\r\n        className={classes.button}\r\n        disabled={\r\n          isSubmitted || appId.trim().length === 0 || username.trim().length === 0 || password.trim().length === 0\r\n        }\r\n        type=\"submit\"\r\n        variant={'contained'}\r\n        color=\"primary\"\r\n      >\r\n        {isSubmitted ? <CircularProgress size={20} /> : isSignUp ? 'Sign Up' : 'Log In'}\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { LoginForm as LoginFormComponent } from '../components/LoginForm'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginFormError, loginFormSubmitted } from '../actions'\r\nimport { LoginFormState } from '../model'\r\nimport { signIn, signUp, userbase } from '../userbase'\r\n\r\ninterface Props {\r\n  readonly state: LoginFormState\r\n}\r\n\r\nexport const LoginForm = ({ state }: Props) => {\r\n  const isSignUp = new URLSearchParams(window.location.search).has('signUp')\r\n  const [appId, setAppId] = useState<string>()\r\n  const [isDbInitialized, setDbInitialized] = useState<boolean>(false)\r\n  const [credentials, setCredentials] = useState<[string, string]>()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onSubmit = (appId: string, username: string, password: string) => {\r\n    setAppId(appId)\r\n    setCredentials([username, password])\r\n    dispatch(loginFormSubmitted())\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (appId && !isDbInitialized) {\r\n      console.debug('Initializing DB...')\r\n      userbase\r\n        .init({ appId })\r\n        .then(() => {\r\n          console.debug('DB init successful')\r\n          setDbInitialized(true)\r\n        })\r\n        .catch((error) => {\r\n          console.debug('DB init failed: ' + error)\r\n          setDbInitialized(false)\r\n          dispatch(loginFormError('Invalid App Id', 'appId'))\r\n        })\r\n    }\r\n  }, [appId, isDbInitialized, setDbInitialized, dispatch])\r\n\r\n  useEffect(() => {\r\n    if (isDbInitialized && credentials) {\r\n      // Prevent already signed-in\r\n      userbase.signOut().catch(() => {\r\n        /* Ignore not-yet-signed-in */\r\n      })\r\n      const [username, password] = credentials\r\n\r\n      if (isSignUp) {\r\n        signUp(username, password).then((action) => dispatch(action))\r\n      } else {\r\n        signIn(username, password).then((action) => dispatch(action))\r\n      }\r\n    }\r\n  }, [isDbInitialized, isSignUp, credentials, dispatch])\r\n\r\n  return <LoginFormComponent isSignUp={isSignUp} state={state} onSubmit={onSubmit} />\r\n}\r\n","import * as React from 'react'\r\nimport SaveIcon from '@material-ui/icons/SaveAlt'\r\nimport { IconButton } from '@material-ui/core'\r\n\r\ninterface Props {\r\n  onClick: () => void\r\n}\r\n\r\nexport const ExportCycleData = ({ onClick }: Props) => (\r\n  <IconButton color=\"inherit\" onClick={onClick}>\r\n    <SaveIcon />\r\n  </IconButton>\r\n)\r\n","import * as React from 'react'\r\nimport { ExportCycleData as ExportCycleDataComponent } from '../components/ExportCycleData'\r\nimport { useTypedDispatch, useTypedSelector } from '../../store'\r\nimport { exportCycleData } from '../actions'\r\nimport { CycleIOData, CycleState } from '../model'\r\nimport { f } from '../utils'\r\n\r\nconst exportableData = (cycleState: CycleState): CycleIOData => {\r\n  const history = cycleState.history\r\n  const allCycles = history ? [history.currentCycle, ...history.pastCycles] : []\r\n  return {\r\n    history: {\r\n      startDates: allCycles.map((c) => f(c.startDate)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const ExportCycleData = () => {\r\n  const cycleState = useTypedSelector<CycleState>((s) => s.cycle)\r\n  const dispatch = useTypedDispatch()\r\n  const onClick = () => {\r\n    const data = exportableData(cycleState)\r\n    dispatch(exportCycleData(data))\r\n  }\r\n  return <ExportCycleDataComponent onClick={onClick} />\r\n}\r\n","export * from './model'\r\nexport * from './store'\r\nexport * from './useTypedSelector'\r\nexport * from './useTypedDispatch'\r\n","import userbaseDB, { DatabaseChangeHandler, Item, Session, Userbase, UserResult } from 'userbase-js'\r\nimport { parse, differenceInDays, startOfToday, addDays } from 'date-fns'\r\nimport { DATE_FORMAT_IMPORT_EXPORT } from '../cycle/utils'\r\nimport { DatabaseAction, loginFormError, loginSuccessful } from './actions'\r\n\r\nexport type { Item, UserResult } from 'userbase-js'\r\n\r\ntype UserbaseProxy = Pick<\r\n  Userbase,\r\n  'init' | 'signUp' | 'signIn' | 'signOut' | 'openDatabase' | 'insertItem' | 'deleteItem'\r\n>\r\n\r\nexport const demoUser: UserResult = {\r\n  username: 'demo-User',\r\n  userId: 'demo-user-id',\r\n  authToken: 'demo-authToken',\r\n  creationDate: new Date(),\r\n  paymentsMode: 'test',\r\n}\r\n\r\nclass DemoUserbase implements UserbaseProxy {\r\n  private changeHandler?: DatabaseChangeHandler\r\n  private items: ReadonlyArray<Item> = []\r\n\r\n  constructor(items: ReadonlyArray<Item>) {\r\n    this.items = items\r\n  }\r\n\r\n  init(): Promise<Session> {\r\n    return Promise.resolve({})\r\n  }\r\n\r\n  signUp(): Promise<UserResult> {\r\n    return Promise.resolve(demoUser)\r\n  }\r\n\r\n  signIn(): Promise<UserResult> {\r\n    return Promise.resolve(demoUser)\r\n  }\r\n\r\n  signOut(): Promise<void> {\r\n    return Promise.resolve()\r\n  }\r\n\r\n  openDatabase(params: {\r\n    databaseName?: string\r\n    databaseId?: string\r\n    changeHandler: DatabaseChangeHandler\r\n  }): Promise<void> {\r\n    this.changeHandler = params.changeHandler\r\n    this.changeHandler([...this.items])\r\n    return Promise.resolve()\r\n  }\r\n\r\n  insertItem(params: { databaseName?: string; databaseId?: string; item: Item; itemId?: string }): Promise<void> {\r\n    if (this.items.find((i) => i.itemId === params.itemId)) {\r\n      // TODO: Reject duplicates (https://github.com/twenty-eight-days/twenty-eight-days/issues/23)\r\n      return Promise.resolve()\r\n    } else {\r\n      const newItems = [\r\n        ...this.items,\r\n        {\r\n          itemId: params.itemId ?? params.item.toString(),\r\n          item: params.item,\r\n        },\r\n      ]\r\n\r\n      if (this.changeHandler) {\r\n        this.changeHandler(newItems)\r\n      }\r\n      this.items = newItems\r\n      return Promise.resolve()\r\n    }\r\n  }\r\n\r\n  deleteItem(params: { databaseName?: string; databaseId?: string; itemId: string }): Promise<void> {\r\n    const newItems = this.items.filter((i) => i.itemId !== params.itemId)\r\n    if (this.changeHandler) {\r\n      this.changeHandler(newItems)\r\n    }\r\n    this.items = newItems\r\n    return Promise.resolve()\r\n  }\r\n}\r\n\r\nconst query = new URLSearchParams(window.location.search)\r\nexport const isDemoMode = query.has('demo')\r\n\r\nconst demoData = [\r\n  '05.01.2021',\r\n  '01.12.2020',\r\n  '12.11.2020',\r\n  '09.10.2020',\r\n  '07.09.2020',\r\n  '10.08.2020',\r\n  '11.07.2020',\r\n  '11.06.2020',\r\n  '05.05.2020',\r\n  '06.04.2020',\r\n  '01.03.2020',\r\n  '10.02.2020',\r\n  '15.01.2020',\r\n  '18.12.2019',\r\n  '20.11.2019',\r\n  '22.10.2019',\r\n]\r\n\r\nconst p = (demoDateString: string) => parse(demoDateString, DATE_FORMAT_IMPORT_EXPORT, new Date()).valueOf()\r\n\r\n// Auto-shift demo data to make sense today -> end up on day 9 of the cycle...\r\nconst demoDataCreationDate = p('13.01.2021')\r\nconst daysToAdd = differenceInDays(startOfToday(), demoDataCreationDate)\r\n\r\nexport const userbase: UserbaseProxy = isDemoMode\r\n  ? new DemoUserbase(\r\n      demoData\r\n        .map<number>((d) => {\r\n          const parsedDate = p(d)\r\n          return addDays(parsedDate, daysToAdd).valueOf()\r\n        })\r\n        .sort((d1, d2) => d2 - d1)\r\n        .map<Item>((startDate: number) => {\r\n          return {\r\n            itemId: `${startDate}`,\r\n            item: startDate,\r\n          }\r\n        })\r\n    )\r\n  : userbaseDB\r\n\r\nexport const signIn = (username: string, password: string): Promise<DatabaseAction> => {\r\n  console.debug('DB sign-in...')\r\n  return userbase\r\n    .signIn({\r\n      username,\r\n      password,\r\n    })\r\n    .then((user: UserResult) => {\r\n      console.debug('DB sign-in successful')\r\n      return loginSuccessful(user)\r\n    })\r\n    .catch((e: string) => {\r\n      console.debug('DB sign-in failed: ' + e)\r\n      if (e.toString().startsWith('AppIdNotValid')) {\r\n        return loginFormError('Invalid App Id', 'appId')\r\n      } else {\r\n        return loginFormError('Invalid Credentials', 'credentials')\r\n      }\r\n    })\r\n}\r\n\r\nexport const signUp = (username: string, password: string): Promise<DatabaseAction> => {\r\n  console.debug('DB sign-up...')\r\n  return userbase\r\n    .signUp({\r\n      username,\r\n      password,\r\n    })\r\n    .then((user: UserResult) => {\r\n      console.debug('DB sign-up successful')\r\n      return loginSuccessful(user)\r\n    })\r\n    .catch((e: string) => {\r\n      console.debug('DB sign-up failed: ' + e)\r\n      if (e.toString().startsWith('AppIdNotValid')) {\r\n        return loginFormError('Invalid App Id', 'appId')\r\n      } else {\r\n        return loginFormError('Invalid Credentials', 'credentials')\r\n      }\r\n    })\r\n}\r\n","import { UPDATE_AUTH_STATE } from './actionTypes'\r\nimport { AuthState, LoginState, LoginFormState, CycleId, LoginFormField } from './model'\r\nimport { userbase, UserResult } from './userbase'\r\n\r\nexport type DatabaseAction = UpdateAuthStateAction\r\n\r\ninterface UpdateAuthStateAction {\r\n  type: typeof UPDATE_AUTH_STATE\r\n  authState: AuthState\r\n}\r\n\r\nconst updateAuthState = (authState: AuthState): UpdateAuthStateAction => ({\r\n  type: UPDATE_AUTH_STATE,\r\n  authState,\r\n})\r\n\r\nconst updateLoginForm = (state: LoginFormState) =>\r\n  updateAuthState({\r\n    type: 'login-form',\r\n    state,\r\n  })\r\n\r\nexport const loginFormSubmitted = () => updateLoginForm({ type: 'login-form-submitted' })\r\nexport const loginFormError = (error: string, field: LoginFormField) =>\r\n  updateLoginForm({ type: 'login-form-error', field, error })\r\n\r\nexport const loginSuccessful = (user: UserResult) =>\r\n  updateAuthState({\r\n    type: 'logged-in',\r\n    user,\r\n  })\r\n\r\nexport const cycleDatabaseName = (loginState: LoginState) => `${loginState.user.username}-cycles-v1`\r\n\r\nexport const addStartDate = (date: number, loginState: LoginState) => async () => {\r\n  const databaseName = cycleDatabaseName(loginState)\r\n  return userbase\r\n    .insertItem({\r\n      databaseName,\r\n      itemId: `${date}`,\r\n      item: date,\r\n    })\r\n    .then(() => console.log('DB insertItem successful'))\r\n    .catch((e) => {\r\n      console.error('DB insertItem failed ' + e)\r\n    })\r\n}\r\n\r\nexport const deleteStartDate = (id: CycleId, loginState: LoginState) => async () => {\r\n  const databaseName = cycleDatabaseName(loginState)\r\n  return userbase\r\n    .deleteItem({\r\n      databaseName,\r\n      itemId: id,\r\n    })\r\n    .then(() => console.log('DB deleteItem successful'))\r\n    .catch((e) => {\r\n      console.error('DB deleteItem failed ' + e)\r\n    })\r\n}\r\n","export * from './model'\r\nexport * from './default'\r\nexport * from './actions'\r\nexport * from './reducer'\r\nexport * from './containers/DataProvider'\r\nexport * from './containers/LoginForm'\r\nexport { isDemoMode } from './userbase'\r\n","import { AuthState, LoginForm } from '../../db'\nimport { CycleData, CycleStats } from '../../cycle'\nimport React, { useState } from 'react'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport StatsIcon from '@material-ui/icons/TrendingUp'\nimport DataIcon from '@material-ui/icons/Event'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles({\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n  },\n})\n\ntype Tab = 'stats' | 'data'\n\ninterface Props {\n  readonly authState: AuthState\n}\n\nexport const Main = ({ authState }: Props) => {\n  const classes = useStyles()\n  const [navTab, setNavTab] = useState<Tab>('stats')\n\n  switch (authState.type) {\n    case 'login-form':\n      return <LoginForm state={authState.state} />\n    case 'logged-in':\n      return (\n        <div>\n          {navTab === 'stats' && <CycleStats />}\n          {navTab === 'data' && <CycleData loginState={authState} />}\n          <BottomNavigation\n            className={classes.bottomNav}\n            value={navTab}\n            onChange={(event, newValue) => {\n              setNavTab(newValue)\n            }}\n            showLabels={true}\n          >\n            <BottomNavigationAction label=\"Stats\" icon={<StatsIcon />} value={'stats'} />\n            <BottomNavigationAction label=\"Data\" icon={<DataIcon />} value={'data'} />\n          </BottomNavigation>\n        </div>\n      )\n    default:\n      return <div />\n  }\n}\n","import React from 'react'\r\nimport { Main as MainComponent } from '../components/Main'\r\nimport { useTypedSelector } from '../../store'\r\nimport { AuthState } from '../../db'\r\n\r\nexport const Main = () => {\r\n  const authState = useTypedSelector<AuthState>((s) => s.database.authState)\r\n  return <MainComponent authState={authState} />\r\n}\r\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { ThemeSwitch } from '../../theme'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { ExportCycleData } from '../../cycle'\nimport { Theme, Typography } from '@material-ui/core'\nimport { Main } from '../containers/Main'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    height: 64, // fix vertical toolbar item offset in safari\n  },\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto', // center is position 'absolute'\n  },\n  toolbarLeft: {\n    height: '100%',\n    marginRight: 'auto', // push to the left\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    alignItems: 'center',\n  },\n  toolbarCenter: {\n    // position centered on page (rather than in flow of toolbar items)\n    position: 'absolute',\n    width: '100%',\n    display: 'grid',\n    pointerEvents: 'none',\n    [theme.breakpoints.down('sm')]: {\n      visibility: 'hidden',\n    },\n  },\n  title: {\n    justifySelf: 'center',\n    color: theme.palette.primary.contrastText,\n  },\n  toolbarRight: {\n    height: '100%',\n    marginLeft: 'auto', // push to the right\n    display: 'grid',\n    gridTemplateColumns: 'auto',\n    alignItems: 'center',\n  },\n  main: {\n    display: 'grid',\n    width: '100vw',\n    gridTemplateRows: 'auto 1fr auto',\n    gridRowGap: 8,\n    paddingTop: 100,\n    paddingBottom: 100,\n    paddingLeft: '20vw',\n    paddingRight: '20vw',\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '5vw',\n      paddingRight: '5vw',\n    },\n  },\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n  },\n}))\n\nexport const App = () => {\n  const classes = useStyles()\n\n  return (\n    <div className=\"App\">\n      <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.toolbarLeft}>\n            <ExportCycleData />\n          </div>\n          <div className={classes.toolbarCenter}>\n            <Typography\n              className={classes.title}\n              variant=\"h6\"\n            >{`${process.env.REACT_APP_NAME} v${process.env.REACT_APP_VERSION}`}</Typography>\n          </div>\n          <div className={classes.toolbarRight}>\n            <ThemeSwitch />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.main}>\n        <Main />\n      </div>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\r\nimport * as React from 'react'\r\nimport { CssBaseline, MuiThemeProvider as ThemeProvider, Theme } from '@material-ui/core'\r\nimport { useTypedSelector } from '../../store'\r\n\r\nexport const App = () => {\r\n  // This is the only place we need to access the theme via our own model\r\n  // From here on, it is safe and convenient to use the `useTheme` hook\r\n  const theme = useTypedSelector<Theme>((s) => s.theme)\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <AppComponent />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './app'\r\nimport { configureStore } from './store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { DataProvider } from './db'\r\n\r\nconst store = configureStore()\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <DataProvider>\r\n      <App />\r\n    </DataProvider>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'))\r\n\r\nserviceWorker.register()\r\n","export * from './actions'\r\nexport * from './reducer'\r\nexport * from './model'\r\nexport * from './default'\r\nexport * from './containers/CycleStats'\r\nexport * from './containers/CycleData'\r\nexport * from './containers/ExportCycleData'\r\n","import format from 'date-fns/format'\r\nimport enLocale from 'date-fns/locale/en-US'\r\n\r\nexport const DATE_FORMAT_IMPORT_EXPORT = 'dd.MM.yyyy'\r\nconst DATE_FORMAT_WITH_WEEKDAY = 'EEEE, MMMM dd'\r\nconst DATE_FORMAT_WITHOUT_WEEKDAY = 'MMMM dd'\r\n\r\nexport const f = (date: number) => format(date, DATE_FORMAT_IMPORT_EXPORT)\r\n\r\nconst options = { locale: enLocale }\r\n\r\nexport const dateWithWeekDay = (date: number) => format(date, DATE_FORMAT_WITH_WEEKDAY, options)\r\nexport const dateWithoutWeekDay = (date: number) => format(date, DATE_FORMAT_WITHOUT_WEEKDAY, options)\r\n"],"sourceRoot":""}