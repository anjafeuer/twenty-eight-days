{"version":3,"sources":["theme/actions.ts","theme/model.ts","theme/defaults.ts","theme/components/ThemeSwitch.tsx","theme/containers/ThemeSwitch.tsx","theme/reducer.ts","cycle/actions.ts","cycle/default.ts","db/default.ts","cycle/actionTypes.ts","db/actionTypes.ts","cycle/reducer.ts","store/index.ts","db/model.ts","db/reducer.ts","store/useTypedSelector.ts","store/useTypedDispatch.ts","cycle/components/CycleDescription.tsx","cycle/components/CycleDurationHistogram.tsx","cycle/components/shared.ts","cycle/components/CycleBarChart.tsx","cycle/components/CycleStats.tsx","cycle/containers/CycleStats.tsx","store/default.ts","store/reducer.ts","store/store.ts","cycle/components/CycleAdd.tsx","cycle/components/CycleData.tsx","cycle/containers/CycleData.tsx","cycle/mocks.ts","db/containers/DataProvider.tsx","db/components/LoginForm.tsx","db/containers/LoginForm.tsx","cycle/components/ExportCycleData.tsx","cycle/containers/ExportCycleData.tsx","db/actions.ts","app/components/Progress.tsx","app/components/PrivacyFirst.tsx","app/components/Error.tsx","app/components/Main.tsx","app/containers/Main.tsx","app/components/App.tsx","app/containers/App.tsx","serviceWorker.ts","index.tsx","cycle/index.ts","db/index.ts","cycle/utils.ts"],"names":["toggleTheme","type","lightTheme","createMuiTheme","palette","darkTheme","defaultThemeState","useStyles","makeStyles","root","display","gridTemplateColumns","alignItems","icon","margin","ThemeSwitch","theme","onToggleTheme","classes","className","Switch","checked","onChange","color","useTypedSelector","s","dispatch","useTypedDispatch","themeReducer","state","action","updateCycles","cycles","UPDATE_CYCLES","exportCycleData","data","blob","Blob","JSON","stringify","today","format","Date","valueOf","FileSaver","saveAs","defaultCycleState","defaultDatabaseState","authState","UPDATE_AUTH_STATE","cycleReducer","length","startDates","sort","a","b","compareDesc","startDate","history","cycleHistory","rawCycles","latestRawCycle","currentCycle","id","duration","differenceInDays","startOfToday","pastCycles","flatMap","rawCycle","index","from","to","Math","abs","CycleIdBrand","dbReducer","useSelector","useDispatch","userName","textTransform","CycleDescription","currentDay","median","lastStartDate","expectedStartDate","addDays","expectedStart","isBefore","dateWithWeekDay","Typography","variant","align","dateWithoutWeekDay","width","height","justifyItems","bar","fill","primary","main","opacity","strokeWidth","stroke","background","default","barBackdrop","dot","secondary","line","text","textAnchor","fontSizeAdjust","dominantBaseline","CycleDurationHistogram","cycleDurations","map","c","binMin","min","binMax","max","x","scaleLinear","domain","range","bins","histogram","thresholds","ticks","y","d","nice","binWidth","currentDayBin","undefined","medianX","viewBox","x1","x2","y1","marginTop","y2","marginBottom","i","h","key","x0","cx","cy","r","maxWidth","label","CycleBarChart","useTheme","reverse","keys","colors","fade","layout","padding","enableGridY","layers","labels","bars","transform","value","top","right","bottom","left","gridGap","spacing","CycleStats","useDividerStyles","container","border","borderBottom","content","paddingTop","paddingBottom","paddingRight","paddingLeft","fontWeight","fontSize","whiteSpace","Divider","useState","setToday","useInterval","cycle","database","user","username","values","mid","floor","nums","daysPast","day","defaultRootState","rootReducer","configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","actions","CycleAdd","onAdd","selectedDate","handleDateChange","isValid","setValid","Card","CardContent","dateAdapter","DateFnsAdapter","locale","deLocale","date","onError","e","renderInput","props","TextField","mask","disableFuture","showTodayButton","autoOk","CardActions","Button","disabled","onClick","list","CycleData","onDelete","List","ListItem","ListItemText","f","ListItemSecondaryAction","IconButton","edge","aria-label","loginState","addStartDate","deleteStartDate","mockCycleStartDates","parse","DATE_FORMAT_IMPORT_EXPORT","DataProvider","children","existingStartDates","useEffect","appId","process","dbInitInProgress","userbase","init","then","session","loginSuccessful","showLoginForm","catch","error","dbInitFailed","isDatabaseOpen","setDatabaseOpen","databaseName","cycleDatabaseName","console","log","openDatabase","changeHandler","items","itemId","item","err","startsWith","forEach","msSinceEpoch","find","insertItem","_","gridTemplateRows","gridRowGap","button","minHeight","LoginForm","onSubmit","setUsername","password","setPassword","isSubmitted","noValidate","autoComplete","preventDefault","fullWidth","event","target","trim","CircularProgress","size","loginFormSubmitted","signIn","rememberMe","loginFormError","ExportCycleData","cycleState","exportableData","updateAuthState","updateLoginForm","deleteItem","Progress","PrivacyFirst","Error","bottomNav","position","Main","navTab","setNavTab","BottomNavigation","newValue","showLabels","BottomNavigationAction","appBar","toolbar","toolbarLeft","marginRight","toolbarCenter","pointerEvents","breakpoints","down","visibility","title","justifySelf","contrastText","toolbarRight","marginLeft","App","AppBar","Toolbar","window","location","reload","ThemeProvider","CssBaseline","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","options","enLocale"],"mappings":"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","file":"static/js/main.12196e63.chunk.js","sourcesContent":["export const TOGGLE_THEME = 'theme/TOGGLE_THEME'\n\nexport type ThemeAction = ToggleThemeAction\n\nexport interface ToggleThemeAction {\n  readonly type: typeof TOGGLE_THEME\n}\n\nexport const toggleTheme = (): ToggleThemeAction => {\n  return {\n    type: TOGGLE_THEME\n  }\n}\n","import { createMuiTheme, Theme } from '@material-ui/core'\n\nexport type ThemeState = Theme\n\nexport const lightTheme: Theme = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n})\n\nexport const darkTheme: Theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n})\n","import { Theme } from '@material-ui/core'\nimport { lightTheme } from './model'\n\nexport const defaultThemeState: Theme = lightTheme\n","import DarkThemeIcon from '@material-ui/icons/Brightness2'\nimport LightThemeIcon from '@material-ui/icons/WbSunny'\nimport * as React from 'react'\nimport { Switch, Theme } from '@material-ui/core'\nimport { darkTheme } from '../model'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    alignItems: 'center'\n  },\n  icon: {\n    margin: 4\n  }\n})\n\nexport interface Props {\n  readonly theme: Theme\n  readonly onToggleTheme: () => void\n}\n\nexport const ThemeSwitch = ({ theme, onToggleTheme }: Props) => {\n  const classes = useStyles(theme)\n  return (\n    <div className={classes.root}>\n      <LightThemeIcon className={classes.icon} />\n      <Switch checked={theme === darkTheme} onChange={onToggleTheme} color={'default'} />\n      <DarkThemeIcon className={classes.icon} />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { ThemeSwitch as ThemeSwitchComp } from '../components/ThemeSwitch'\nimport { ThemeAction, toggleTheme } from '../index'\nimport { useTypedDispatch, useTypedSelector } from '../../store'\nimport { Theme } from '@material-ui/core'\n\nexport const ThemeSwitch = () => {\n  const theme = useTypedSelector<Theme>((s) => s.theme)\n  const dispatch = useTypedDispatch<ThemeAction>()\n  const onToggleTheme = () => dispatch(toggleTheme())\n  return <ThemeSwitchComp theme={theme} onToggleTheme={onToggleTheme} />\n}\n","import { ThemeAction, TOGGLE_THEME } from './actions'\nimport { darkTheme, lightTheme, ThemeState } from './model'\n\nexport const themeReducer = (state: ThemeState, action: ThemeAction): ThemeState => {\n  if (action.type === TOGGLE_THEME) {\n    return state.palette.type === 'light' ? darkTheme : lightTheme\n  } else {\n    return state\n  }\n}\n","import FileSaver from 'file-saver'\nimport { CycleIOData, RawCycle } from './model'\nimport { UPDATE_CYCLES } from './actionTypes'\nimport format from 'date-fns/format'\n\nexport type CycleAction = UpdateCyclesAction\n\ninterface UpdateCyclesAction {\n  type: typeof UPDATE_CYCLES\n  cycles: ReadonlyArray<RawCycle>\n}\n\nexport const updateCycles = (cycles: ReadonlyArray<RawCycle>): UpdateCyclesAction => ({\n  type: UPDATE_CYCLES,\n  cycles,\n})\n\nexport const exportCycleData = (data: CycleIOData) => () => {\n  const blob = new Blob([JSON.stringify(data)], { type: 'text/json;charset=utf-8' })\n  const today = format(new Date().valueOf(), 'yyyyMMdd')\n  FileSaver.saveAs(blob, `cycle-data-${today}.json`)\n}\n","import { CycleState } from './model'\n\nexport const defaultCycleState: CycleState = {}\n","import { DatabaseState } from './model'\n\nexport const defaultDatabaseState: DatabaseState = {\n  authState: {\n    type: 'no-app-id',\n  },\n}\n","export const UPDATE_CYCLES = 'cycle/UPDATE_CYCLES'\n","export const UPDATE_AUTH_STATE = 'db/UPDATE_AUTH_STATE'\n","import { CycleHistory, CycleState, PastCycle, RawCycle } from './model'\nimport { defaultCycleState } from './default'\nimport { CycleAction } from './actions'\nimport { UPDATE_CYCLES } from './actionTypes'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport startOfToday from 'date-fns/startOfToday'\nimport { compareDesc } from 'date-fns'\n\nexport const cycleReducer = (state: CycleState = defaultCycleState, action: CycleAction): CycleState => {\n  switch (action.type) {\n    case UPDATE_CYCLES: {\n      if (action.cycles.length > 0) {\n        const startDates = [...action.cycles].sort((a, b) => compareDesc(a.startDate, b.startDate))\n        const history = cycleHistory(startDates)\n        return {\n          ...state,\n          history,\n        }\n      } else {\n        return state\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport function cycleHistory(rawCycles: ReadonlyArray<RawCycle>): CycleHistory {\n  const latestRawCycle = rawCycles[0]\n  return {\n    currentCycle: {\n      id: latestRawCycle.id,\n      startDate: latestRawCycle.startDate,\n      duration: differenceInDays(startOfToday(), latestRawCycle.startDate),\n      type: 'current',\n    },\n    pastCycles: rawCycles.flatMap<PastCycle>((rawCycle, index, rawCycles) => {\n      if (index > 0) {\n        const from = rawCycles[index - 1].startDate\n        const to = rawCycle.startDate\n        const duration = Math.abs(differenceInDays(from, to))\n        return [\n          {\n            ...rawCycle,\n            type: 'past',\n            duration,\n          },\n        ]\n      } else {\n        return []\n      }\n    }),\n  }\n}\n","export * from './model'\nexport * from './store'\nexport * from './useTypedSelector'\nexport * from './useTypedDispatch'\n","import { UserResult } from 'userbase-js'\n\n/* ·················································································································· */\n/*  Redux State\n/* ·················································································································· */\n\nexport interface DatabaseState {\n  readonly authState: AuthState\n}\n\nexport type AuthState = NoAppId | DbInitInProgress | DbInitFailed | DisplayLoginForm | LoginState\n\nexport interface NoAppId {\n  type: 'no-app-id'\n}\n\nexport interface DbInitInProgress {\n  type: 'db-init-in-progress'\n}\n\nexport interface DbInitFailed {\n  type: 'db-init-failed'\n  error: any\n}\n\nexport interface DisplayLoginForm {\n  type: 'login-form'\n  state: LoginFormState\n}\n\nexport type LoginFormState = LoginFormIdle | LoginFormSubmitted | LoginFormError\n\nexport interface LoginFormIdle {\n  type: 'login-form-idle'\n}\n\nexport interface LoginFormSubmitted {\n  type: 'login-form-submitted'\n}\n\nexport interface LoginFormError {\n  type: 'login-form-error'\n  error: any\n}\n\nexport interface LoginState {\n  type: 'logged-in'\n  user: UserResult\n}\n\n/* ·················································································································· */\n/*  Userbase IDs\n/* ·················································································································· */\n\nenum CycleIdBrand {}\n\nexport type CycleId = CycleIdBrand & string\n","import { DatabaseState } from './model'\nimport { defaultDatabaseState } from './default'\nimport { DatabaseAction } from './actions'\nimport { UPDATE_AUTH_STATE } from './actionTypes'\n\nexport const dbReducer = (state: DatabaseState = defaultDatabaseState, action: DatabaseAction): DatabaseState => {\n  switch (action.type) {\n    case UPDATE_AUTH_STATE:\n      return {\n        ...state,\n        authState: action.authState,\n      }\n    default:\n      return state\n  }\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport { RootState } from './model'\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useDispatch } from 'react-redux'\nimport { RootAction } from './actions'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { RootState } from './model'\n\nexport const useTypedDispatch = <A extends RootAction>() => useDispatch<ThunkDispatch<RootState, {}, A>>()\n","import * as React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { dateWithoutWeekDay, dateWithWeekDay } from '../utils'\nimport addDays from 'date-fns/addDays'\nimport { isBefore } from 'date-fns'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  userName: {\n    textTransform: 'capitalize',\n  },\n})\n\ninterface Props {\n  readonly userName: string\n  readonly currentDay: number\n  readonly median: number\n  readonly lastStartDate: number\n}\n\nexport const CycleDescription = ({ userName, currentDay, median, lastStartDate }: Props) => {\n  const classes = useStyles()\n  const expectedStartDate = addDays(lastStartDate, median - 1).valueOf()\n  const expectedStart = isBefore(expectedStartDate, new Date()) ? (\n    <b>{'today'}</b>\n  ) : (\n    <div>\n      {'on '}\n      <b>{dateWithWeekDay(expectedStartDate)}</b>\n    </div>\n  )\n\n  return (\n    <div>\n      <Typography variant={'body1'} align={'center'}>\n        Hey <span className={classes.userName}>{userName}</span> – today is {dateWithWeekDay(new Date().valueOf())}\n      </Typography>\n      <Typography variant={'h1'} align={'center'}>\n        {currentDay}\n      </Typography>\n      <Typography variant={'body1'} align={'center'}>\n        days since your last period, which started on {dateWithoutWeekDay(lastStartDate)}.\n      </Typography>\n      <br />\n      <Typography variant={'body1'} align={'center'}>\n        Your next period is expected {expectedStart}.\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\nimport { histogram, max, min } from 'd3-array'\nimport { scaleLinear } from 'd3-scale'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { CycleHistory } from '../model'\nimport { barOpacity, fontSizeAdjust } from './shared'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    height: '100%',\n    justifyItems: 'center',\n  },\n  bar: {\n    fill: theme.palette.primary.main,\n    opacity: barOpacity,\n    strokeWidth: 1,\n    stroke: theme.palette.background.default,\n  },\n  barBackdrop: {\n    fill: 'white',\n  },\n  dot: {\n    fill: theme.palette.secondary.main,\n  },\n  line: {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 1,\n  },\n  text: {\n    fill: theme.palette.text.primary,\n    textAnchor: 'middle',\n    fontSizeAdjust,\n    dominantBaseline: 'central',\n  },\n}))\n\ninterface Props {\n  readonly width: number\n  readonly height: number\n  readonly currentDay: number\n  readonly median: number\n  readonly cycleHistory: CycleHistory\n}\n\nexport const CycleDurationHistogram = ({ width, height, currentDay, median, cycleHistory }: Props) => {\n  const classes = useStyles()\n\n  const marginTop = 10\n  const marginBottom = 20\n\n  const cycleDurations = cycleHistory.pastCycles.map((c) => c.duration)\n\n  const binMin = min(cycleDurations) ?? 20\n  const binMax = max(cycleDurations) ?? 35\n\n  const x = scaleLinear()\n    .domain([binMin, binMax + 1])\n    .range([0, width])\n  const bins = histogram().thresholds(x.ticks(binMax - binMin))(cycleDurations)\n\n  const y = scaleLinear()\n    .domain([0, max(bins, (d) => d.length) ?? 0])\n    .nice()\n    .range([height - marginBottom, marginTop])\n\n  const binWidth = width / bins.length\n  const currentDayBin = currentDay >= binMin ? bins[currentDay - binMin] : undefined\n\n  const medianX = x(median + 0.5)\n\n  return (\n    <div className={classes.root}>\n      <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n        <line\n          className={classes.line}\n          x1={medianX}\n          x2={medianX}\n          y1={marginTop / 2}\n          y2={height - marginBottom / 2 - 5}\n        />\n        <text className={classes.text} x={medianX} y={height - marginBottom / 2}>\n          {median}\n        </text>\n        {bins.map((b, i) => {\n          const h = y(0) - y(b.length)\n          return (\n            <g key={`bin-${i}`}>\n              <rect\n                className={`${classes.bar}, ${classes.barBackdrop}`}\n                x={x(b.x0!)}\n                y={y(b.length)}\n                width={binWidth}\n                height={h}\n              />\n              <rect className={classes.bar} x={x(b.x0!)} y={y(b.length)} width={binWidth} height={h} />\n            </g>\n          )\n        })}\n        {currentDayBin && (\n          <circle\n            className={classes.dot}\n            cx={x(currentDay + 0.5)}\n            cy={y(currentDayBin.length) - binWidth / 2}\n            r={binWidth / 3}\n            strokeWidth={0}\n          />\n        )}\n      </svg>\n      <Typography variant={'body1'} align={'center'}>\n        Your <b>median cycle</b> length is {median} days.\n      </Typography>\n    </div>\n  )\n}\n","export const fontSizeAdjust = 0.3\nexport const barOpacity = 0.5\n","import React from 'react'\nimport { CycleHistory } from '../model'\nimport { BarItemProps, ResponsiveBar } from '@nivo/bar'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport { barOpacity, fontSizeAdjust } from './shared'\nimport { useTheme } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  root: (height: number) => ({ width: '100%', maxWidth: '40vw', height }),\n  label: {\n    dominantBaseline: 'central',\n    fontSizeAdjust,\n  },\n})\n\nconst barWidth = 6.1 // approximate histogram bar width\nconst barPadding = 0.2\nconst labelPadding = 2\n\ninterface Props {\n  readonly cycleHistory: CycleHistory\n}\n\nexport const CycleBarChart = ({ cycleHistory }: Props) => {\n  const pastCycles = cycleHistory.pastCycles\n  const height = barWidth * (1 + barPadding) * pastCycles.length\n  const classes = useStyles(height)\n  const theme = useTheme()\n\n  const CustomLabels = ({ bars }: { bars: BarItemProps[] }) => {\n    const labels = bars.map(({ data, x, y, width, height }) => {\n      return (\n        <text\n          className={classes.label}\n          key={data.index}\n          x={x}\n          y={y}\n          transform={`translate(${width + labelPadding},${height / 2})`}\n        >\n          {data.value}\n        </text>\n      )\n    })\n    return <g>{labels}</g>\n  }\n\n  const data = [...pastCycles].reverse()\n\n  return (\n    <div className={classes.root}>\n      <ResponsiveBar\n        data={data}\n        keys={['duration']}\n        colors={[fade(theme.palette.primary.main, barOpacity)]}\n        layout={'horizontal'}\n        padding={0.2}\n        enableGridY={false}\n        layers={['axes', 'bars', CustomLabels]}\n        margin={{ top: 0, right: 15, bottom: 0, left: 0 }}\n        label={() => ''}\n      />\n    </div>\n  )\n}\n","import { CycleDescription } from './CycleDescription'\nimport * as React from 'react'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { CycleHistory } from '../model'\nimport { CycleDurationHistogram } from './CycleDurationHistogram'\nimport { CycleBarChart } from './CycleBarChart'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gridGap: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  readonly userName: string\n  readonly currentDay: number\n  readonly median: number\n  readonly lastStartDate: number\n  readonly cycleHistory: CycleHistory\n}\n\nexport const CycleStats = ({ userName, currentDay, median, lastStartDate, cycleHistory }: Props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CycleDescription userName={userName} currentDay={currentDay} median={median} lastStartDate={lastStartDate} />\n      <Divider text={'Histogram'} />\n      <CycleDurationHistogram\n        width={200}\n        height={150}\n        currentDay={currentDay}\n        median={median}\n        cycleHistory={cycleHistory}\n      />\n      <Divider text={'Bar Chart'} />\n      <CycleBarChart cycleHistory={cycleHistory} />\n    </div>\n  )\n}\n\n// https://stackoverflow.com/questions/61730527/react-create-a-horizontal-divider-with-text-in-between\n\nconst useDividerStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    marginTop: 12,\n  },\n  border: {\n    borderBottom: '2px solid lightgray',\n    width: '100%',\n  },\n  content: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    fontWeight: 500,\n    fontSize: 22,\n    color: 'lightgray',\n    whiteSpace: 'nowrap',\n  },\n}))\n\ninterface DividerProps {\n  readonly text: string\n}\n\nconst Divider = ({ text }: DividerProps) => {\n  const classes = useDividerStyles()\n  return (\n    <div className={classes.container}>\n      <div className={classes.border} />\n      <span className={classes.content}>{text}</span>\n      <div className={classes.border} />\n    </div>\n  )\n}\n","import { CycleStats as CycleStatsComponent } from '../components/CycleStats'\nimport * as React from 'react'\nimport { useState } from 'react'\nimport useInterval from '@use-it/interval'\nimport { useTypedSelector } from '../../store'\nimport { CycleHistory } from '../model'\nimport startOfToday from 'date-fns/startOfToday'\nimport { differenceInDays } from 'date-fns'\n\nexport const medianCycleLength = (durations: ReadonlyArray<number>) => {\n  const median = (values: ReadonlyArray<number>) => {\n    const mid = Math.floor(values.length / 2),\n      nums = [...values].sort((a, b) => a - b)\n    return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n  }\n  return median(durations)\n}\n\nexport const CycleStats = () => {\n  const [today, setToday] = useState<number>(startOfToday().valueOf())\n\n  useInterval(() => {\n    setToday(startOfToday().valueOf())\n  }, 1000 * 60)\n\n  const history = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\n  const userName = useTypedSelector<string>((s) => {\n    const authState = s.database.authState\n    return authState.type === 'logged-in' ? authState.user.username : ''\n  })\n  if (history) {\n    const lastStartDate = history.currentCycle.startDate\n    const median = medianCycleLength(history.pastCycles.map((c) => c.duration))\n    const daysPast = differenceInDays(today, lastStartDate)\n    const day = Math.floor(daysPast) + 1 // start date is cycle day 1\n    return (\n      <CycleStatsComponent\n        userName={userName}\n        currentDay={day}\n        median={median}\n        lastStartDate={lastStartDate}\n        cycleHistory={history}\n      />\n    )\n  } else {\n    return <div />\n  }\n}\n","import { defaultThemeState } from '../theme'\nimport { RootState } from './model'\nimport { defaultCycleState } from '../cycle'\nimport { defaultDatabaseState } from '../db'\n\nexport const defaultRootState: RootState = {\n  database: defaultDatabaseState,\n  theme: defaultThemeState,\n  cycle: defaultCycleState,\n}\n","import { ThemeAction, themeReducer } from '../theme'\nimport { RootAction } from './actions'\nimport { RootState } from './model'\nimport { defaultRootState } from './default'\nimport { cycleReducer } from '../cycle'\nimport { CycleAction } from '../cycle'\nimport { DatabaseAction, dbReducer } from '../db'\n\nexport const rootReducer = (state: RootState = defaultRootState, action: RootAction): RootState => ({\n  database: dbReducer(state.database, action as DatabaseAction),\n  theme: themeReducer(state.theme, action as ThemeAction),\n  cycle: cycleReducer(state.cycle, action as CycleAction),\n})\n","import { createStore, Store, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './reducer'\nimport { RootState } from './model'\nimport { RootAction } from './actions'\nimport thunk from 'redux-thunk'\n\nexport const configureStore = (): Store<RootState, RootAction> => {\n  return createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport { Button, Card, CardActions, CardContent, TextField } from '@material-ui/core'\nimport DateFnsAdapter from '@material-ui/pickers/adapter/date-fns'\nimport deLocale from 'date-fns/locale/de'\nimport startOfToday from 'date-fns/startOfToday'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  content: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    width: '100%',\n  },\n  actions: {\n    display: 'grid',\n    justifyItems: 'end',\n  },\n})\n\ninterface Props {\n  readonly onAdd: (date: number) => void\n}\n\nexport const CycleAdd = ({ onAdd }: Props) => {\n  const classes = useStyles()\n  const [selectedDate, handleDateChange] = useState<number>(startOfToday().valueOf())\n  const [isValid, setValid] = useState<boolean>(true)\n\n  const onChange = (date: any) => date && handleDateChange((date as Date).valueOf())\n  const handleSubmit = () => onAdd(selectedDate)\n  const handleError = (e: any) => setValid(e === null)\n\n  return (\n    <Card className={classes.root} variant={'outlined'}>\n      <CardContent className={classes.content}>\n        <LocalizationProvider dateAdapter={DateFnsAdapter} locale={deLocale}>\n          <DatePicker\n            label=\"Cycle Start Date\"\n            value={selectedDate}\n            onChange={onChange}\n            onError={handleError}\n            renderInput={(props) => <TextField {...props} />}\n            mask={'__.__.____'}\n            disableFuture={true}\n            showTodayButton={true}\n            autoOk={true}\n          />\n        </LocalizationProvider>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant={'contained'} color=\"primary\" disabled={!isValid} onClick={handleSubmit}>\n          Add\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { CycleHistory } from '../model'\nimport { IconButton, List, ListItemSecondaryAction, ListItemText } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { CycleId } from '../../db'\nimport { CycleAdd } from './CycleAdd'\nimport { f } from '../utils'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    width: '100%',\n    justifyItems: 'center',\n  },\n  list: {\n    width: '100%',\n  },\n})\n\ninterface Props {\n  readonly cycleHistory?: CycleHistory\n  readonly onAdd: (date: number) => void\n  readonly onDelete: (id: CycleId) => void\n}\n\nexport const CycleData = ({ cycleHistory, onAdd, onDelete }: Props) => {\n  const classes = useStyles()\n  const cycles = cycleHistory ? [cycleHistory.currentCycle, ...cycleHistory.pastCycles] : []\n  return (\n    <div className={classes.root}>\n      <CycleAdd onAdd={onAdd} />\n      <List className={classes.list}>\n        {cycles.map((cycle) => {\n          return (\n            <ListItem key={cycle.id}>\n              <ListItemText>{f(cycle.startDate)}</ListItemText>\n              <ListItemSecondaryAction>\n                <IconButton edge={'end'} aria-label={'delete'} onClick={() => onDelete(cycle.id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n}\n","import React from 'react'\nimport { CycleData as CycleDataComponent } from '../components/CycleData'\nimport { useTypedSelector } from '../../store'\nimport { CycleHistory } from '../model'\nimport { useDispatch } from 'react-redux'\nimport { addStartDate, deleteStartDate, LoginState, CycleId } from '../../db'\n\ninterface Props {\n  readonly loginState: LoginState\n}\n\nexport const CycleData = ({ loginState }: Props) => {\n  const cycleHistory = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\n  const dispatch = useDispatch()\n  const onAdd = (date: number) => dispatch(addStartDate(date, loginState))\n  const onDelete = (id: CycleId) => dispatch(deleteStartDate(id, loginState))\n  return <CycleDataComponent cycleHistory={cycleHistory} onAdd={onAdd} onDelete={onDelete} />\n}\n","import parse from 'date-fns/parse'\nimport { DATE_FORMAT_IMPORT_EXPORT } from './utils'\n\nconst cycleStartDates: string[] = []\n\nexport const mockCycleStartDates: ReadonlyArray<number> = cycleStartDates.map((d) =>\n  parse(d, DATE_FORMAT_IMPORT_EXPORT, new Date()).valueOf()\n)\n","import { ReactElement, useEffect, useState } from 'react'\nimport { useTypedSelector } from '../../store'\nimport userbase, { Item } from 'userbase-js'\nimport { useDispatch } from 'react-redux'\nimport { RawCycle, updateCycles } from '../../cycle'\nimport { dbInitFailed, dbInitInProgress, loginSuccessful, showLoginForm, cycleDatabaseName } from '../actions'\nimport { CycleId } from '../model'\nimport { mockCycleStartDates } from '../../cycle/mocks'\n\ninterface Props {\n  children: ReactElement\n}\n\nexport const DataProvider = ({ children }: Props) => {\n  const existingStartDates = useTypedSelector<ReadonlyArray<number>>(\n    (s) => s.cycle.history?.pastCycles.map((c) => c.startDate) ?? []\n  )\n  const loginState = useTypedSelector((s) => s.database.authState)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const appId = process.env.REACT_APP_USERBASE_APP_ID || new URLSearchParams(window.location.search).get('id') || ''\n    if (appId.length === 36) {\n      dispatch(dbInitInProgress())\n      userbase\n        .init({ appId })\n        .then((session) => {\n          if (session.user) {\n            dispatch(loginSuccessful(session.user))\n          } else {\n            dispatch(showLoginForm())\n          }\n        })\n        .catch((error) => dispatch(dbInitFailed(error)))\n    }\n  }, [dispatch])\n\n  const [isDatabaseOpen, setDatabaseOpen] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (loginState.type === 'logged-in') {\n      const databaseName = cycleDatabaseName(loginState)\n      console.log(`DB openDatabase ${databaseName} ...`)\n      userbase\n        .openDatabase({\n          databaseName,\n          changeHandler: (items: ReadonlyArray<Item>) => {\n            const startDates = items.map<RawCycle>((i) => ({\n              id: i.itemId as CycleId,\n              startDate: i.item,\n            }))\n            dispatch(updateCycles(startDates))\n          },\n        })\n        .then(() => {\n          setDatabaseOpen(true)\n          console.log(`DB openDatabase ${databaseName} successful`)\n        })\n        .catch((err) => console.log(`DB openDatabase ${databaseName} failed ${err}`))\n    }\n  }, [loginState, dispatch])\n\n  useEffect(() => {\n    if (loginState.type === 'logged-in' && isDatabaseOpen && loginState.user.username.startsWith('r')) {\n      const databaseName = cycleDatabaseName(loginState)\n      console.log(`DB insert mock start dates into ${databaseName} ...`)\n      mockCycleStartDates.forEach((msSinceEpoch) => {\n        if (existingStartDates.find((e) => e === msSinceEpoch)) {\n          return\n        } else {\n          userbase\n            .insertItem({\n              databaseName,\n              itemId: `${msSinceEpoch}`,\n              item: msSinceEpoch,\n            })\n            .catch((_) => {\n              // /** fails due to duplicates expected **/\n            })\n        }\n      })\n    }\n  }, [isDatabaseOpen, existingStartDates, loginState, dispatch])\n\n  return children\n}\n","import React, { useState } from 'react'\nimport { Button, CircularProgress, TextField, Theme } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { LoginFormState } from '../model'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    display: 'grid',\n    gridTemplateRows: 'auto auto auto',\n    gridRowGap: theme.spacing(2),\n  },\n  button: {\n    minHeight: 24,\n  },\n}))\n\ninterface Props {\n  state: LoginFormState\n  onSubmit: (username: string, password: string) => void\n}\n\nexport const LoginForm = ({ state, onSubmit }: Props) => {\n  const classes = useStyles()\n\n  const [username, setUsername] = useState<string>(process.env.REACT_APP_USERBASE_USERNAME ?? '')\n  const [password, setPassword] = useState<string>(process.env.REACT_APP_USERBASE_PASSWORD ?? '')\n  const isSubmitted = state.type === 'login-form-submitted'\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    onSubmit(username, password)\n  }\n  return (\n    <form className={classes.root} noValidate={true} autoComplete=\"off\" onSubmit={handleSubmit}>\n      <TextField\n        id=\"username\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"Username\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        disabled={isSubmitted}\n      />\n      <TextField\n        id=\"password\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"Password\"\n        type={'password'}\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        disabled={isSubmitted}\n      />\n      <Button\n        className={classes.button}\n        disabled={isSubmitted || username.trim().length === 0 || password.trim().length === 0}\n        type=\"submit\"\n        variant={'contained'}\n        color=\"primary\"\n      >\n        {isSubmitted ? <CircularProgress size={20} /> : 'Log In'}\n      </Button>\n    </form>\n  )\n}\n","import React from 'react'\nimport { LoginForm as LoginFormComponent } from '../components/LoginForm'\nimport { useDispatch } from 'react-redux'\nimport userbase, { UserResult } from 'userbase-js'\nimport { loginFormError, loginFormSubmitted, loginSuccessful } from '../actions'\nimport { LoginFormState } from '../model'\n\ninterface Props {\n  readonly state: LoginFormState\n}\n\nexport const LoginForm = ({ state }: Props) => {\n  const dispatch = useDispatch()\n  const onSubmit = (username: string, password: string) => {\n    dispatch(loginFormSubmitted())\n    userbase\n      .signIn({\n        username,\n        password,\n        rememberMe: 'session',\n      })\n      .then((user: UserResult) => {\n        return dispatch(loginSuccessful(user))\n      })\n      .catch((error) => dispatch(loginFormError(error)))\n  }\n  return <LoginFormComponent state={state} onSubmit={onSubmit} />\n}\n","import * as React from 'react'\nimport SaveIcon from '@material-ui/icons/SaveAlt'\nimport { IconButton } from '@material-ui/core'\n\ninterface Props {\n  onClick: () => void\n}\n\nexport const ExportCycleData = ({ onClick }: Props) => (\n  <IconButton color=\"inherit\" onClick={onClick}>\n    <SaveIcon />\n  </IconButton>\n)\n","import * as React from 'react'\nimport { ExportCycleData as ExportCycleDataComponent } from '../components/ExportCycleData'\nimport { useTypedDispatch, useTypedSelector } from '../../store'\nimport { exportCycleData } from '../actions'\nimport { CycleIOData, CycleState } from '../model'\nimport { f } from '../utils'\n\nconst exportableData = (cycleState: CycleState): CycleIOData => {\n  const history = cycleState.history\n  const allCycles = history ? [history.currentCycle, ...history.pastCycles] : []\n  return {\n    history: {\n      startDates: allCycles.map((c) => f(c.startDate)),\n    },\n  }\n}\n\nexport const ExportCycleData = () => {\n  const cycleState = useTypedSelector<CycleState>((s) => s.cycle)\n  const dispatch = useTypedDispatch()\n  const onClick = () => {\n    const data = exportableData(cycleState)\n    dispatch(exportCycleData(data))\n  }\n  return <ExportCycleDataComponent onClick={onClick} />\n}\n","import { UPDATE_AUTH_STATE } from './actionTypes'\nimport { AuthState, LoginState, LoginFormState, CycleId } from './model'\nimport userbase, { UserResult } from 'userbase-js'\n\nexport type DatabaseAction = UpdateAuthStateAction\n\ninterface UpdateAuthStateAction {\n  type: typeof UPDATE_AUTH_STATE\n  authState: AuthState\n}\n\nconst updateAuthState = (authState: AuthState): UpdateAuthStateAction => ({\n  type: UPDATE_AUTH_STATE,\n  authState,\n})\n\nexport const dbInitInProgress = () =>\n  updateAuthState({\n    type: 'db-init-in-progress',\n  })\n\nexport const dbInitFailed = (error: any) =>\n  updateAuthState({\n    type: 'db-init-failed',\n    error,\n  })\n\nconst updateLoginForm = (state: LoginFormState) =>\n  updateAuthState({\n    type: 'login-form',\n    state,\n  })\n\nexport const showLoginForm = () => updateLoginForm({ type: 'login-form-idle' })\nexport const loginFormSubmitted = () => updateLoginForm({ type: 'login-form-submitted' })\nexport const loginFormError = (error: any) => updateLoginForm({ type: 'login-form-error', error })\n\nexport const loginSuccessful = (user: UserResult) =>\n  updateAuthState({\n    type: 'logged-in',\n    user,\n  })\n\nexport const cycleDatabaseName = (loginState: LoginState) => `${loginState.user.username}-cycles-v1`\n\nexport const addStartDate = (date: number, loginState: LoginState) => async () => {\n  const databaseName = cycleDatabaseName(loginState)\n  return userbase\n    .insertItem({\n      databaseName,\n      itemId: `${date}`,\n      item: date,\n    })\n    .then(() => console.log('DB insertItem successful'))\n    .catch((e) => {\n      console.error('DB insertItem failed ' + e)\n    })\n}\n\nexport const deleteStartDate = (id: CycleId, loginState: LoginState) => async () => {\n  const databaseName = cycleDatabaseName(loginState)\n  return userbase\n    .deleteItem({\n      databaseName,\n      itemId: id,\n    })\n    .then(() => console.log('DB deleteItem successful'))\n    .catch((e) => {\n      console.error('DB deleteItem failed ' + e)\n    })\n}\n","import { CircularProgress, Theme, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    justifyItems: 'center',\n    marginTop: theme.spacing(1),\n    gridRowGap: theme.spacing(2),\n  },\n}))\n\ninterface Props {\n  readonly label: string\n}\n\nexport const Progress = ({ label }: Props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CircularProgress size={100} />\n      <Typography variant={'body1'} align={'center'}>\n        {label}\n      </Typography>\n    </div>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport LockIcon from '@material-ui/icons/Lock'\n\nexport const PrivacyFirst = () => (\n  <Typography variant={'body1'} align={'center'}>\n    <LockIcon fontSize={'large'} />\n    <br />\n    This app uses a <b>privacy-first</b> approach and can only be accessed through a <b>personal</b> URL\n  </Typography>\n)\n","import { Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport ErrorIcon from '@material-ui/icons/Error'\n\ninterface Props {\n  readonly error: any\n}\n\nexport const Error = ({ error }: Props) => {\n  console.log(error)\n  return (\n    <Typography variant={'body1'} align={'center'}>\n      <ErrorIcon fontSize={'large'} color={'secondary'} />\n      <br />\n      Oops – something went wrong...\n    </Typography>\n  )\n}\n","import { AuthState, LoginForm } from '../../db'\nimport { CycleData, CycleStats } from '../../cycle'\nimport React, { useState } from 'react'\nimport { Progress } from './Progress'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport StatsIcon from '@material-ui/icons/TrendingUp'\nimport DataIcon from '@material-ui/icons/Event'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { PrivacyFirst } from './PrivacyFirst'\nimport { Error } from './Error'\n\nconst useStyles = makeStyles({\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n  },\n})\n\ntype Tab = 'stats' | 'data'\n\ninterface Props {\n  readonly authState: AuthState\n}\n\nexport const Main = ({ authState }: Props) => {\n  const classes = useStyles()\n  const [navTab, setNavTab] = useState<Tab>('stats')\n\n  switch (authState.type) {\n    case 'no-app-id':\n      return <PrivacyFirst />\n    case 'db-init-in-progress':\n      return <Progress label={'Connecting to Server'} />\n    case 'db-init-failed':\n      return <Error error={authState.error} />\n    case 'login-form':\n      return <LoginForm state={authState.state} />\n    case 'logged-in':\n      return (\n        <div>\n          {navTab === 'stats' && <CycleStats />}\n          {navTab === 'data' && <CycleData loginState={authState} />}\n          <BottomNavigation\n            className={classes.bottomNav}\n            value={navTab}\n            onChange={(event, newValue) => {\n              setNavTab(newValue)\n            }}\n            showLabels={true}\n          >\n            <BottomNavigationAction label=\"Stats\" icon={<StatsIcon />} value={'stats'} />\n            <BottomNavigationAction label=\"Data\" icon={<DataIcon />} value={'data'} />\n          </BottomNavigation>\n        </div>\n      )\n    default:\n      return <div />\n  }\n}\n","import React from 'react'\nimport { Main as MainComponent } from '../components/Main'\nimport { useTypedSelector } from '../../store'\nimport { AuthState } from '../../db'\n\nexport const Main = () => {\n  const authState = useTypedSelector<AuthState>((s) => s.database.authState)\n  return <MainComponent authState={authState} />\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { ThemeSwitch } from '../../theme'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { ExportCycleData } from '../../cycle'\nimport { IconButton, Theme, Typography } from '@material-ui/core'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport { Main } from '../containers/Main'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    height: 64, // fix vertical toolbar item offset in safari\n  },\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto', // center is position 'absolute'\n  },\n  toolbarLeft: {\n    height: '100%',\n    marginRight: 'auto', // push to the left\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    alignItems: 'center',\n  },\n  toolbarCenter: {\n    // position centered on page (rather than in flow of toolbar items)\n    position: 'absolute',\n    width: '100%',\n    display: 'grid',\n    pointerEvents: 'none',\n    [theme.breakpoints.down('sm')]: {\n      visibility: 'hidden',\n    },\n  },\n  title: {\n    justifySelf: 'center',\n    color: theme.palette.primary.contrastText,\n  },\n  toolbarRight: {\n    height: '100%',\n    marginLeft: 'auto', // push to the right\n    display: 'grid',\n    gridTemplateColumns: 'auto',\n    alignItems: 'center',\n  },\n  main: {\n    display: 'grid',\n    width: '100vw',\n    gridTemplateRows: 'auto 1fr auto',\n    gridRowGap: 8,\n    paddingTop: 100,\n    paddingBottom: 100,\n    paddingLeft: '20vw',\n    paddingRight: '20vw',\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '5vw',\n      paddingRight: '5vw',\n    },\n  },\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n  },\n}))\n\nexport const App = () => {\n  const classes = useStyles()\n  const onRefresh = () => window.location.reload()\n\n  return (\n    <div className=\"App\">\n      <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.toolbarLeft}>\n            <ExportCycleData />\n            <IconButton color=\"inherit\" onClick={onRefresh}>\n              <RefreshIcon />\n            </IconButton>\n          </div>\n          <div className={classes.toolbarCenter}>\n            <Typography\n              className={classes.title}\n              variant=\"h6\"\n            >{`${process.env.REACT_APP_NAME} v${process.env.REACT_APP_VERSION}`}</Typography>\n          </div>\n          <div className={classes.toolbarRight}>\n            <ThemeSwitch />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.main}>\n        <Main />\n      </div>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider, Theme } from '@material-ui/core'\nimport { useTypedSelector } from '../../store'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  const theme = useTypedSelector<Theme>((s) => s.theme)\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport { configureStore } from './store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { DataProvider } from './db'\n\nconst store = configureStore()\n\nconst Root = () => (\n  <Provider store={store}>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nserviceWorker.register()\n","export * from './actions'\nexport * from './reducer'\nexport * from './model'\nexport * from './default'\nexport * from './containers/CycleStats'\nexport * from './containers/CycleData'\nexport * from './containers/ExportCycleData'\n","export * from './model'\nexport * from './default'\nexport * from './actions'\nexport * from './reducer'\nexport * from './containers/DataProvider'\nexport * from './containers/LoginForm'\n","import format from 'date-fns/format'\nimport enLocale from 'date-fns/locale/en-US'\n\nexport const DATE_FORMAT_IMPORT_EXPORT = 'dd.MM.yyyy'\nconst DATE_FORMAT_WITH_WEEKDAY = 'EEEE, MMMM dd'\nconst DATE_FORMAT_WITHOUT_WEEKDAY = 'MMMM dd'\n\nexport const f = (date: number) => format(date, DATE_FORMAT_IMPORT_EXPORT)\n\nconst options = { locale: enLocale }\n\nexport const dateWithWeekDay = (date: number) => format(date, DATE_FORMAT_WITH_WEEKDAY, options)\nexport const dateWithoutWeekDay = (date: number) => format(date, DATE_FORMAT_WITHOUT_WEEKDAY, options)\n"],"sourceRoot":""}